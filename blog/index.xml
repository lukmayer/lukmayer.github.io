<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>lukmayer.github.io</title>
<link>https://lukmayer.github.io/blog/</link>
<atom:link href="https://lukmayer.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>Lukas Mayer&#39;s personal blog</description>
<generator>quarto-1.6.42</generator>
<lastBuildDate>Wed, 25 Jun 2025 07:00:00 GMT</lastBuildDate>
<item>
  <title>Which countries are equipped to handle a storm?</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/futureliving.html</link>
  <description><![CDATA[ 





<!-- Debt -->
<!-- EC -->
<!-- GDP -->
<!-- Innovation -->
<!-- Social mobility -->
<!-- Social progress -->
<!-- GINI -->
<!-- Gini trend -->
<!-- Country name check -->
<!-- 
NO EC: Iceland, Luxembourg, Malta
Not enough GINI: New Zealand, Singapore 
-->
<p>So far, I have never felt all that attached to where I live. I think that’s a big part in why I left Germany when I was 19, having since then lived in Scotland, different places in England, and now the USA. However, I do feel like I should settle down once my studies are over, so it’s been a bit of a personal hobby of mine to think about what my location priorities would be.</p>
<p>There are a lot of factors one could possibly consider, many of which are deeply personal. For example, would you prefer to speak a certain language, live in a place that has good opportunities in your industry, do you like the nature there, the culture, the people, the food, the politics? Once you have answered all these questions, you could, at least in principle, evaluate different cities within that country according to your priorities for the local situation. Of course, life never actually works out according to these kinds of master plans, and yet it is kind of fun to think about the possibilities.</p>
<p><br>
</p>
<section id="the-problem" class="level2">
<h2 class="anchored" data-anchor-id="the-problem">The problem</h2>
<p>Not to be a debbie downer or anything, but I am in some ways kind of pessimistic about the future of humanity as a whole. Not in the nuclear fallout, skynet killer AI kind of way, but more so the “Can I reasonably expect to ever be more financially secure than my parents?” kind of way.</p>
<p>Without wanting to put my doomer hat on, I think it’s fair to say that:</p>
<ul>
<li>We are probably past peak globalism for a good little while, meaning less economic growth, more uncertainty etc.</li>
<li>Inequality is rising fast, increasingly eradicating the concept of there existing a “middle class”</li>
<li>Populations are declining across the board, which poses existential risks for government financed services like public healthcare systems.</li>
<li>Lots of other stuff that’s out of the scope for this post</li>
</ul>
<p>So the question is, is there anywhere that’s bucking these trends? When you start searching around a bit rather than just judging places by the vibes, you’ll quickly learn that economists come up with all sorts of whimsical indexes to compare countries to each other with.</p>
<p>So I’ve decided I’d see whether I can make somewhat sensible relative judgments of the future readiness of different countries by using these indexes other people have thought long and hard about. Given my bullet list of challenges above, I’ve picked out a few that seem relevant:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/List_of_countries_by_economic_complexity">Economic Complexity Index</a>: Because the more diverse your economy the better you can handle some recessions here and there while the rest of the world is on fire.</li>
<li><a href="https://en.wikipedia.org/wiki/Global_Social_Mobility_Index#Global_Social_Mobility_Index_(2020)_results">Social Mobility Index</a>: As an indicator of relatively low inequality</li>
<li><a href="https://data.un.org/Data.aspx?d=WDI&amp;f=Indicator_Code%3ASI.POV.GINI">Gini index</a>: Specifically the trend in Gini over time, since that would be indicative of the change in inequality during recent years.</li>
<li><a href="https://en.wikipedia.org/wiki/List_of_countries_by_government_debt">Government debt as percent of GDP</a>: Because if you’re going through a bit of a rough patch, like a demographic crisis, you need to be able to have the cash at hand to be able to push through those hard times.</li>
</ul>
<p>I’ve also picked out a few ones that just feel like they’d be somewhat indicative of living a nicer life:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(PPP)_per_capita">GDP per capita (Purchasing Power Parity)</a>: Cuz money makes the world go round.</li>
<li><a href="https://en.wikipedia.org/wiki/Social_Progress_Index">Social Progress Index</a>: As it seems to reflect provision of and access to high quality public services.</li>
<li><a href="https://en.wikipedia.org/wiki/Global_Innovation_Index">Global innovation Index</a>: Probably useful as a very high-level indicator of future economic opportunities.</li>
</ul>
<p><br>
</p>
</section>
<section id="method" class="level2">
<h2 class="anchored" data-anchor-id="method">Method</h2>
<p>I grabbed most of the data from Wikipedia by using the <a href="https://wikitable2csv.ggor.de">Wikitable2csv website</a>. Only the Gini by year data I had to grab from the website of the United Nations.</p>
<p>I basically cleaned up each dataset separately, with the intention of eventually doing a complete-cases analysis. For the Gini time-series data, I decided I would fit linear regression models to each country that had at least 10 data points between 1980 and 2025. So the slope estimate is indicative of the trend. This is definitely not statistically sound, but it is decidedly convenient. I decided 1980 should be the cut-off point for the time trends based on my impression that this is around where many developed countries started to take a turn for the worse in terms of inequality. For the GDP estimates, I used the ones provided by the WorldBank.</p>
<p>Many countries did not meet all my data requirements. Of course, most of these are developing countries where accurate information is hard to find. That being said, these countries are pretty unlikely to have topped the charts of my analysis anyway. Some smaller, developed countries lacked at least one of my metrics. For example, Iceland and Luxembourg are not included in the Economic Complexity Index, and New Zealand and Singapore did not have enough Gini data for my time trend estimations. Dropping these from the data is a real shame, since I would expect them to rank fairly highly if the information had been available. So when you look at my results later, keep in mind that some noteworthy contenders are not included.</p>
<p>With all of this out the way, I merged all the data together and only retained countries that have all the records I wanted. 62 countries pass all the checks. I decided to rank countries by a composite score derived from the variables I’ve prepared. Ultimately, I used the Z-score of each variable and simply calculate the row sum for each country. Z-scores are pretty neat as they standardize all variables to the scale of standard deviations from the mean, meaning that not only are all variables now in the same unit, differences between countries are still accurately retained (unlike rank-scoring). For the row sum of my Z-scored variables to be valid, I needed to ensure that all variables follow a similar distribution, so I used the Box-Cox method to automatically find the optimal transformation that makes my values normally distributed. The Box-Cox transform is only valid for positive values, meaning I additionally had to add the minimum of a variable to its values, if that variable featured negative values. Of course, I inverted the Z-scores for debt as percent of GDP and Gini time trend, since less debt is better, and decreasing Gini is better. Note that my composite score thus implicitly applies equal weights to all variables included.</p>
<p><br>
</p>
</section>
<section id="results" class="level2">
<h2 class="anchored" data-anchor-id="results">Results</h2>
<p>So that’s how I arrived at this table:</p>
<div class="cell">
<div class="cell-output-display">
<div class="datatables html-widget html-fill-item" id="htmlwidget-589eb065973fbfd1345c" style="width:100%;height:auto;"></div>
<script type="application/json" data-for="htmlwidget-589eb065973fbfd1345c">{"x":{"filter":"none","vertical":false,"extensions":["Buttons"],"data":[["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],[51,41,49,21,6,59,13,46,33,15,37,31,50,38,28,26,14,5,55,57,58,17,4,12,44,3,34,60,23,54,52,8,19,18,62,43,29,24,32,40,47,7,11,61,45,56,53,27,22,30,36,25,16,20,2,1,39,42,9,10,35,48],["Albania","Argentina","Armenia","Australia","Austria","Bangladesh","Belgium","Brazil","Bulgaria","Canada","Chile","China","Colombia","Costa Rica","Croatia","Cyprus","Czech Republic","Denmark","Ecuador","Egypt","El Salvador","Estonia","Finland","France","Georgia","Germany","Greece","Honduras","Hungary","India","Indonesia","Ireland","Israel","Italy","Ivory Coast","Kazakhstan","Latvia","Lithuania","Malaysia","Mexico","Moldova","Netherlands","Norway","Pakistan","Panama","Paraguay","Peru","Poland","Portugal","Romania","Serbia","Slovakia","Slovenia","Spain","Sweden","Switzerland","Thailand","Ukraine","United Kingdom","United States","Uruguay","Vietnamcontainer":"<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Rank<\/th>\n      <th>Country<\/th>\n      <th>Composite.Score<\/th>\n      <th>Economic.Complexity.Index<\/th>\n      <th>GINI.Trend.1980.onwards<\/th>\n      <th>Global.Innovation.Index<\/th>\n      <th>Global.Social.Mobility.Index<\/th>\n      <th>Social.Progress.Index<\/th>\n      <th>Debt.Percent.GDP<\/th>\n      <th>GDP.perCapita.PPP<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>","options":{"pageLength":20,"scrollX":true,"order":[[1,"asc"]],"dom":"Bfrtip","buttons":[{"extend":"csv","filename":"data"}],"columnDefs":[{"className":"dt-right","targets":[1,3,4,5,6,7,8,9,10]},{"orderable":false,"targets":0},{"name":" ","targets":0},{"name":"Rank","targets":1},{"name":"Country","targets":2},{"name":"Composite.Score","targets":3},{"name":"Economic.Complexity.Index","targets":4},{"name":"GINI.Trend.1980.onwards","targets":5},{"name":"Global.Innovation.Index","targets":6},{"name":"Global.Social.Mobility.Index","targets":7},{"name":"Social.Progress.Index","targets":8},{"name":"Debt.Percent.GDP","targets":9},{"name":"GDP.perCapita.PPP","targets":10}],"autoWidth":false,"orderClasses":false,"lengthMenu":[10,20,25,50,100]}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p><br>
</p>
<p>My results are obviously biased in the sense that they critically depend on what metrics are included in the analysis. If you do not care about GDP for example, then your ranking will probably end up looking very different from this one. I hope my reasoning for what is included was somewhat convincing though.</p>
<p>What’s interesting about my results is of course that I’ve taken care of outliers ruining the party by transforming variables before Z-scoring. Ireland is often a bit painful (especially with economic data) since their figures are extremely distorted due to huge multinational companies using tax loopholes there. Here, Ireland still ranks pretty high despite my transformations, so I’d wager you should still be a bit cautious with interpreting its rank. However, you don’t quite get all the usual chart toppers. For example, usually the Nordic countries all but dominate these kinds of rankings. Here, some of them seem to have been punished by having pretty simple economic structures.</p>
<p>The big winner of my ranking is Switzerland, which is actually not surprising at all. The Swiss do pretty well in any metric you throw at them, and they don’t even seem to be experiencing large changes in inequality like some of their neighbors. Ranks 2-5 are all occupied by countries that have experienced steeply rising inequality in recent decades. Especially Germany gets a lot of flak for this, with my impression of the domestic sentiment being that politics in Germany has not been this tense in a long time. Perhaps the resilience of the German economy and it’s relatively strong public institutions ought to inspire more hope for a good future than what the vibes suggest? Ranks 14, 16 and 17, which are the Czech Republic, Slovenia, and Estonia, seem pretty interesting to me, since these are countries that most people sleep on. They seem to be doing pretty well, at least judging by the scores.</p>
<p><br>
</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Please do not take my results too seriously. Despite the fact that I am basing my analyses on some metrics, it should not be forgotten that many of my analysis decisions were done on the basis of impressions. My approach is not exactly rigorous, and you may very well arrive at quite different results. Furthermore, a famous quote that is apparently <a href="https://quoteinvestigator.com/2013/10/20/no-predict/">traceable to the Danes</a> tells us: “Making predictions is hard, especially about the future”.</p>
<p>Nevertheless, I thought it was pretty fun to just throw something together that appears to be a useful description of some of the preferences I hold for what a good place to life constitutes. You can download the table above as CSV, though the variables in that table are still in the original scale for better interpretability, meaning that to replicate my results, you’d have to calculate the Z-Scores yourself. My code is below.</p>
<p>So will I be moving to Switzerland? Well, maybe, though I can trace that interest to at least 2019, meaning this ranking had little to do with it. It’s close to home, (partly) German-speaking, has excellent infrastructure and beautiful nature, what’s not to like? At the end of the day, we make these kinds of decisions based on our subjective values rather than some score. And with that, I hope this was interesting to you!</p>
<p><br>
</p>
</section>
<section id="appendix" class="level2">
<h2 class="anchored" data-anchor-id="appendix">Appendix</h2>
<section id="code" class="level3">
<h3 class="anchored" data-anchor-id="code">Code</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(DT) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for table</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(forecast) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for box-cox</span></span>
<span id="cb1-4"></span>
<span id="cb1-5">debt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/debt_gdp.csv"</span>)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(debt) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gross_2024"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gross_2022"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Net_2021"</span>)</span>
<span id="cb1-7">debt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> debt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Country, Gross_2024))</span>
<span id="cb1-8">debt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Gross_2024 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(debt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Gross_2024)</span>
<span id="cb1-9">debt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> debt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Gross_2024))</span>
<span id="cb1-10">debt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recode</span>(debt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country,</span>
<span id="cb1-11">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brunei Darussalam"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brunei"</span>,</span>
<span id="cb1-12">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Democratic Republic of the Congo"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DR Congo"</span>,</span>
<span id="cb1-13">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Republic of the Congo"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congo"</span>,</span>
<span id="cb1-14">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Côte d'Ivoire"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ivory Coast"</span>,</span>
<span id="cb1-15">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Georgia (country)"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Georgia"</span>,</span>
<span id="cb1-16">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hong Kong SAR"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hong Kong"</span>,</span>
<span id="cb1-17">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyrgyz Republic"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyrgyzstan"</span></span>
<span id="cb1-18">)</span>
<span id="cb1-19"></span>
<span id="cb1-20">ec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/economic_complexity.csv"</span>)</span>
<span id="cb1-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(ec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rank"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EC_2018"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Change_13to18"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Change_08to18"</span>)</span>
<span id="cb1-22">ec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ec <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Country, EC_2018))</span>
<span id="cb1-23">ec<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>EC_2018 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(ec<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>EC_2018)</span>
<span id="cb1-24">ec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ec <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(EC_2018))</span>
<span id="cb1-25"></span>
<span id="cb1-26">gdp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/gdp_pc_ppp.csv"</span>)</span>
<span id="cb1-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(gdp) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IMF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IMF_year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WB_year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CIA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CIA_year"</span>)</span>
<span id="cb1-28">gdp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gdp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Country, WB))</span>
<span id="cb1-29">gdp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gdp[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gdp),] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop first row (not a country)</span></span>
<span id="cb1-30">gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed=</span>T) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#strip * from Country</span></span>
<span id="cb1-31">gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>WB <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>WB, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fixed=</span>T) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#strip , from WB</span></span>
<span id="cb1-32">gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>WB <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>WB)</span>
<span id="cb1-33">gdp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gdp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(WB))</span>
<span id="cb1-34">gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\u202F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, gdp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country)</span>
<span id="cb1-35"></span>
<span id="cb1-36">innov <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/innovation.csv"</span>)</span>
<span id="cb1-37"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(innov) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rank"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Score"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Group"</span>)</span>
<span id="cb1-38">innov <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> innov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Country, Score)</span>
<span id="cb1-39">innov<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Score <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(innov<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Score)</span>
<span id="cb1-40">innov <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> innov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Score))</span>
<span id="cb1-41"></span>
<span id="cb1-42">mob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/social_mobility.csv"</span>)</span>
<span id="cb1-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(mob) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rank"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Score"</span>)</span>
<span id="cb1-44">mob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mob <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(Country, Score)</span>
<span id="cb1-45">mob<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Score <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(mob<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Score)</span>
<span id="cb1-46">mob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> mob <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Score))</span>
<span id="cb1-47"></span>
<span id="cb1-48">prog <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/social_progress.csv"</span>)</span>
<span id="cb1-49">prog <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> prog <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(Country, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Social Progress Score</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>))</span>
<span id="cb1-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(prog) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Score"</span>)</span>
<span id="cb1-51">prog<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Score <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(prog<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Score)</span>
<span id="cb1-52">prog <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> prog <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Score))</span>
<span id="cb1-53">prog<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recode</span>(prog<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country,</span>
<span id="cb1-54">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Korea, Republic of"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Korea"</span>,</span>
<span id="cb1-55">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Czechia"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Czech Republic"</span>,</span>
<span id="cb1-56">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Republic of North Macedonia"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"North Macedonia"</span>,</span>
<span id="cb1-57">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cabo Verde"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cape Verde"</span>,</span>
<span id="cb1-58">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"West Bank and Gaza"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Palestine"</span>,</span>
<span id="cb1-59">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gambia, The"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gambia"</span>,</span>
<span id="cb1-60">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Côte d'Ivoire"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ivory Coast"</span>,</span>
<span id="cb1-61">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congo, Republic of"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congo"</span>,</span>
<span id="cb1-62">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Congo, Democratic Republic of"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DR Congo"</span></span>
<span id="cb1-63">)</span>
<span id="cb1-64"></span>
<span id="cb1-65">gini <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./assets/data/gini.csv"</span>)</span>
<span id="cb1-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(gini) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gini"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Footnote"</span>)</span>
<span id="cb1-67">gini <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gini <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1980</span>)</span>
<span id="cb1-68">gini <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gini <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-69">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Country) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-70">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(Gini)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb1-72">gini_trend <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gini <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-73">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(Country) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-74">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(</span>
<span id="cb1-75">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gini_trend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(Gini <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> Year))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-76">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.groups =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drop"</span></span>
<span id="cb1-77">  )</span>
<span id="cb1-78">gini_trend<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recode</span>(gini_trend<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country,</span>
<span id="cb1-79">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Czechia"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Czech Republic"</span>,</span>
<span id="cb1-80">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CÃ´te d'Ivoire"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ivory Coast"</span>,</span>
<span id="cb1-81">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Korea"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Korea"</span>,</span>
<span id="cb1-82">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyrgyz Republic"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kyrgyzstan"</span>,</span>
<span id="cb1-83">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slovak Republic"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Slovakia"</span>,</span>
<span id="cb1-84">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Viet Nam"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vietnam"</span></span>
<span id="cb1-85">)</span>
<span id="cb1-86"></span>
<span id="cb1-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># country name check</span></span>
<span id="cb1-88">df_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(debt, ec, gdp, gini_trend, innov, mob, prog)</span>
<span id="cb1-89">countries_by_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(df_list, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Country))</span>
<span id="cb1-90">common_countries <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reduce</span>(intersect, countries_by_df)</span>
<span id="cb1-91">all_countries <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(countries_by_df))</span>
<span id="cb1-92">not_shared <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(all_countries, common_countries)</span>
<span id="cb1-93">country_presence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(all_countries, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(country) {</span>
<span id="cb1-94">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(countries_by_df, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df_countries) country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> df_countries)</span>
<span id="cb1-95">})</span>
<span id="cb1-96">non_shared_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> country_presence[, not_shared, drop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]</span>
<span id="cb1-97"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(non_shared_matrix)</span>
<span id="cb1-98"></span>
<span id="cb1-99"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># merging data</span></span>
<span id="cb1-100"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(debt) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"debt"</span>)</span>
<span id="cb1-101"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(ec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ec"</span>)</span>
<span id="cb1-102"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(gdp) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp"</span>)</span>
<span id="cb1-103"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(gini_trend) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gini"</span>)</span>
<span id="cb1-104"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(innov) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"innov"</span>)</span>
<span id="cb1-105"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(mob) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mob"</span>)</span>
<span id="cb1-106"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(prog) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prog"</span>)</span>
<span id="cb1-107">merged_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> debt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-108">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(ec, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-109">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-110">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(gini_trend, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-111">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(innov, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-112">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(mob, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-113">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inner_join</span>(prog, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)</span>
<span id="cb1-114"></span>
<span id="cb1-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># box-cox</span></span>
<span id="cb1-116">vars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"debt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ec"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gini"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"innov"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mob"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prog"</span>)</span>
<span id="cb1-117"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(var <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vars) {</span>
<span id="cb1-118">  min_val <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(merged_df[[var]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-119">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(min_val <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb1-120">    constant <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(min_val) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add 1 extra for safety</span></span>
<span id="cb1-121">    merged_df[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_pos"</span>)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> merged_df[[var]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> constant</span>
<span id="cb1-122">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shifted by"</span>, constant, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-123">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb1-124">    merged_df[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_pos"</span>)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> merged_df[[var]]</span>
<span id="cb1-125">  }</span>
<span id="cb1-126">  lambda <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BoxCox.lambda</span>(merged_df[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_pos"</span>)]])</span>
<span id="cb1-127">  merged_df[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_bc"</span>)]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BoxCox</span>(merged_df[[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_pos"</span>)]], lambda)</span>
<span id="cb1-128">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"optimal lambda:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(lambda, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-129">}</span>
<span id="cb1-130"></span>
<span id="cb1-131"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># z-scoring</span></span>
<span id="cb1-132">df_z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> merged_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-133">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ends_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_bc"</span>), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span>(.)[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]))</span>
<span id="cb1-134">df_z <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_z <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(c, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ends_with</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_bc"</span>))</span>
<span id="cb1-135">df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gini <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gini_bc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lower gini = better</span></span>
<span id="cb1-136">df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>debt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>debt_bc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lower debt = better</span></span>
<span id="cb1-137">df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>score <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(df_z[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-138">df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rank <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rank</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>df_z<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>score)</span>
<span id="cb1-139"></span>
<span id="cb1-140"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># final table</span></span>
<span id="cb1-141">final <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(merged_df, df_z[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all.x =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-142">final <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> final <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"debt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ec"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gini"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"innov"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mob"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prog"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"score"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank"</span>))</span>
<span id="cb1-143">final<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>score <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(final<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>score, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-144">final<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gini <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(final<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gini, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-145"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(final) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debt.Percent.GDP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Economic.Complexity.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDP.perCapita.PPP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GINI.Trend.1980.onwards"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Global.Innovation.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Global.Social.Mobility.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Social.Progress.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Composite.Score"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rank"</span>)</span>
<span id="cb1-146">final <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> final[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rank"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Country"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Composite.Score"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Economic.Complexity.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GINI.Trend.1980.onwards"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Global.Innovation.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Global.Social.Mobility.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Social.Progress.Index"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debt.Percent.GDP"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GDP.perCapita.PPP"</span>)]</span></code></pre></div>
<p><br>
</p>
</section>
<section id="data" class="level3">
<h3 class="anchored" data-anchor-id="data">Data</h3>
<ul>
<li><a href="./assets/data/debt_gdp.csv">Debt as share of GDP</a></li>
<li><a href="./assets/data/economic_complexity.csv">Economic Complexity Index</a></li>
<li><a href="./assets/data/gdp_pc_ppp.csv">GDP per Capita (PPP)</a></li>
<li><a href="./assets/data/innovation.csv">Innovation Index</a></li>
<li><a href="./assets/data/social_mobility.csv">Social Mobility Index</a></li>
<li><a href="./assets/data/social_progress.csv">Social Progress Index</a></li>
<li><a href="./assets/data/gini.csv">Gini index by country and year</a></li>
</ul>
<p><br>
</p>
</section>
<section id="sessioninfo" class="level3">
<h3 class="anchored" data-anchor-id="sessioninfo">SessionInfo</h3>
<p>Other information that will be helpful for reproducibility</p>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.3.3 (2024-02-29)
Platform: x86_64-conda-linux-gnu (64-bit)
Running under: Freedesktop SDK 24.08 (Flatpak runtime)

Matrix products: default
BLAS/LAPACK: /home/lm/miniconda3/lib/libopenblasp-r0.3.29.so;  LAPACK version 3.12.0

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

time zone: US/Pacific
tzcode source: system (glibc)

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] forecast_8.24.0 DT_0.33         lubridate_1.9.4 forcats_1.0.0  
 [5] stringr_1.5.1   dplyr_1.1.4     purrr_1.0.4     readr_2.1.5    
 [9] tidyr_1.3.1     tibble_3.3.0    ggplot2_3.5.2   tidyverse_2.0.0

loaded via a namespace (and not attached):
 [1] sass_0.4.10        generics_0.1.4     stringi_1.8.7      lattice_0.22-7    
 [5] hms_1.1.3          digest_0.6.37      magrittr_2.0.3     evaluate_1.0.4    
 [9] grid_4.3.3         timechange_0.3.0   RColorBrewer_1.1-3 fastmap_1.2.0     
[13] jsonlite_2.0.0     nnet_7.3-20        crosstalk_1.2.1    scales_1.4.0      
[17] jquerylib_0.1.4    cli_3.6.5          crayon_1.5.3       rlang_1.1.6       
[21] bit64_4.6.0-1      cachem_1.1.0       withr_3.0.2        yaml_2.3.10       
[25] tools_4.3.3        parallel_4.3.3     tzdb_0.5.0         colorspace_2.1-1  
[29] curl_6.2.2         vctrs_0.6.5        R6_2.6.1           zoo_1.8-14        
[33] lifecycle_1.0.4    tseries_0.10-58    bit_4.6.0          htmlwidgets_1.6.4 
[37] vroom_1.6.5        urca_1.3-4         pkgconfig_2.0.3    bslib_0.9.0       
[41] pillar_1.10.2      gtable_0.3.6       quantmod_0.4.28    glue_1.8.0        
[45] Rcpp_1.0.14        xfun_0.52          lmtest_0.9-40      tidyselect_1.2.1  
[49] knitr_1.50         farver_2.1.2       nlme_3.1-168       htmltools_0.5.8.1 
[53] xts_0.14.1         rmarkdown_2.29     timeDate_4041.110  fracdiff_1.5-3    
[57] compiler_4.3.3     quadprog_1.5-8     TTR_0.24.4        </code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>r</category>
  <category>life</category>
  <guid>https://lukmayer.github.io/blog/posts/futureliving.html</guid>
  <pubDate>Wed, 25 Jun 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/countries.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Light and Dark mode PDFs for your Quarto website</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/cv_theme.html</link>
  <description><![CDATA[ 





<p>As you may be able to tell from the fact that I am writing three posts about theming different aspects of a Quarto website on the same day, I have been re-designing my site.</p>
<p>At some point yesterday I thought I was finally done making all page content adapt to the current website theme, until my glaring white CV nearly blinded me on my otherwise perfectly dark website.</p>
<p>So I set out to find a solution for this. How can I render a PDF in dark mode, and then selectively show the PDF that fits the theme the user has active?</p>
<section id="part-1-creating-a-dark-mode-cv" class="level2">
<h2 class="anchored" data-anchor-id="part-1-creating-a-dark-mode-cv">Part 1: Creating a dark mode CV</h2>
<p>I didn’t want to have two separate files for my CV since I could potentially forget to update one of them, so my first challenge was to figure out how I can have one “Content” file inform two themed output files. Luckily this is very easy with includes.</p>
<p>I simply have a <code>cv_content.qmd</code> file that contains all the Markdown and LaTeX I use for my CV. Then, I have two further <code>.qmd</code> files which use the content file as a basis and define the theme for that version in the YAML front-matter. For example, <code>cv_lwm_dark.qmd</code> looks like this:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pdf</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">documentclass</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> article</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">self-contained</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb1-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geometry</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> top=10mm</span></span>
<span id="cb1-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> left=15mm</span></span>
<span id="cb1-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> right=15mm</span></span>
<span id="cb1-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> bottom=5mm</span></span>
<span id="cb1-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> heightrounded</span></span>
<span id="cb1-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontfamily</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> libertine</span></span>
<span id="cb1-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorlinks</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">linkcolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> linkblue</span></span>
<span id="cb1-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">urlcolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> linkblue</span></span>
<span id="cb1-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">citecolor</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> linkblue</span></span>
<span id="cb1-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontsize</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'16'</span></span>
<span id="cb1-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-in-header</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-20">        \usepackage{multicol}</span>
<span id="cb1-21">        \usepackage{tabularx}</span>
<span id="cb1-22">        \usepackage{lipsum}</span>
<span id="cb1-23">        \usepackage{graphicx}</span>
<span id="cb1-24">        \usepackage{hyperref}</span>
<span id="cb1-25">        \usepackage{libertine}</span>
<span id="cb1-26">        \usepackage{xcolor}</span>
<span id="cb1-27">        \usepackage{sectsty}</span>
<span id="cb1-28">        \pagestyle{empty}</span>
<span id="cb1-29">        \setlength{\multicolsep}{2pt plus 1.0pt minus 0.75pt}</span>
<span id="cb1-30">        \setlength{\columnsep}{3em}</span>
<span id="cb1-31">        % Dark mode colors</span>
<span id="cb1-32">        \definecolor{bgcolor}{RGB}{30,33,38}</span>
<span id="cb1-33">        \definecolor{textcolor}{RGB}{209,213,219}</span>
<span id="cb1-34">        \definecolor{headingcolor}{RGB}{229,231,235}</span>
<span id="cb1-35">        \definecolor{linkblue}{RGB}{96,165,250}</span>
<span id="cb1-36">        \pagecolor{bgcolor}</span>
<span id="cb1-37">        \color{textcolor}</span>
<span id="cb1-38">        \allsectionsfont{\color{headingcolor}}</span>
<span id="cb1-39"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-40"></span>
<span id="cb1-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># {{&lt; include cv_content.qmd &gt;}} </span></span></code></pre></div>
<p>As you can see, I simply define the colors via LaTeX commands, and then use HTML includes to have this file use the content file as input. <strong>Note that you have to remove the ‘#’ from the code block above for this to work</strong>. So now, one content file can be used to render two different CVs, pretty neat!</p>
</section>
<section id="part-2-selectively-showing-the-fitting-cv" class="level2">
<h2 class="anchored" data-anchor-id="part-2-selectively-showing-the-fitting-cv">Part 2: Selectively showing the fitting CV</h2>
<p>Now we want to show only one of the CV’s at a time, depending on the current site theme. According to the <a href="https://quarto.org/docs/output-formats/html-themes.html#mode-specific-content">Quarto documentation</a>, we should be able to simply wrap some iframes in the pre-defined divs like so:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Academic</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">If you can't see the embedded PDF below, you can download it [here](cv_lwm.pdf).</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.light-content</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">&lt;iframe src="cv_lwm.pdf</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#toolbar=0&amp;navpanes=0&amp;scrollbar=0&amp;view=FitH&amp;page=1" style="width: 90%; height: 800px; border: none;"&gt;&lt;/iframe&gt;</span></span>
<span id="cb2-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.dark-content</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">&lt;iframe src="cv_lwm_dark.pdf</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#toolbar=0&amp;navpanes=0&amp;scrollbar=0&amp;view=FitH&amp;page=1" style="width: 90%; height: 800px; border: none;"&gt;&lt;/iframe&gt;</span></span>
<span id="cb2-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span></code></pre></div>
<p>However, for some reason this is not currently enough. I suspect it doesn’t work because of the iframes.</p>
<p>For it to work properly, you actually do need to also add a bit of CSS to selectively hide one of the CVs. I just did it by embedding the following on my CV page:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb3-1"></span>
<span id="cb3-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">body<span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:not(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-dark</span><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.dark-content</span> {</span>
<span id="cb3-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">display</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">!important</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">}</span>
<span id="cb3-7"></span>
<span id="cb3-8">body<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-dark</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.light-content</span> {</span>
<span id="cb3-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">display</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">!important</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">}</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.light-content</span> iframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.dark-content</span> iframe {</span>
<span id="cb3-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-15">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">height</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">border</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17">}</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/* hiding the white scroll bar in dark mode */</span></span>
<span id="cb3-20"></span>
<span id="cb3-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.dark-content</span> {</span>
<span id="cb3-22">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">position</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">relative</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-23">}</span>
<span id="cb3-24"></span>
<span id="cb3-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.dark-content</span> iframe {</span>
<span id="cb3-26">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-27">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">height</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-28">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">border</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-29">}</span>
<span id="cb3-30"></span>
<span id="cb3-31">body<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-dark</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.dark-content</span><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::after</span> {</span>
<span id="cb3-32">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">content</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-33">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">position</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">absolute</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-34">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">top</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-35">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">right</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb3-36">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">width</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb3-37">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">height</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">800</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-38">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">background-color</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">--bs-body-bg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">#1e2126</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> </span>
<span id="cb3-39">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pointer-events</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">none</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-40">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">z-index</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-41">}</span>
<span id="cb3-42"></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">style</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>As you can see, I added a little bit of CSS just to hide the scroll bar of the embedded PDF when on the dark mode version of the site. That is because the default PDF reader of Chromium-based browsers cannot be styled, meaning I cannot override the light mode colors of the default PDF reader. Therefore, I felt simply covering the scroll bar is the simplest solution to address this limitation.</p>
<p>And that’s it! Enjoy :)</p>


</section>

 ]]></description>
  <category>quarto</category>
  <category>webdev</category>
  <guid>https://lukmayer.github.io/blog/posts/cv_theme.html</guid>
  <pubDate>Sun, 15 Jun 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/light_and_dark.png" medium="image" type="image/png" height="104" width="144"/>
</item>
<item>
  <title>Customizing the theme icon for Quarto websites</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/switcher.html</link>
  <description><![CDATA[ 





<p>In Quarto websites you can specify more than one theme, like so:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> darkly</span></span>
<span id="cb1-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">light</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> morph</span></span></code></pre></div>
<p>If you define your light and dark theme in this way, the rendered website will have a switch icon in the navbar.</p>
<p>The icon this theme toggle uses by default is too abstract for my taste.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/switcher.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="The default theme switcher icon"><img src="https://lukmayer.github.io/blog/posts/images/switcher.png" class="img-fluid figure-img" alt="The default theme switcher icon"></a></p>
<figcaption>The default theme switcher icon</figcaption>
</figure>
</div>
<p>I definitely prefer the more commonly used sun and moon icons, so I set out to find a way to replace this icon.</p>
<p>Naturally, I first tried to find other people who wanted to replace this. I found one <a href="https://github.com/quarto-dev/quarto-cli/discussions/3300">GitHub Issue thread</a> where people were discussing different ways of going about it, but it didn’t seem like anyone had a complete solution quite yet.</p>
<p>After a lot of experimenting, I found a way that works for me. Funnily, it’s pretty similar to what was discussed in the thread, as what I arrived on is basically a mix of two of the pre-existing answers.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource css number-lines code-with-copy"><code class="sourceCode css"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-color-scheme-toggle</span> {</span>
<span id="cb2-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">margin-right</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">px</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">!important</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3">}</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-color-scheme-toggle</span><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:not(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.alternate</span><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.bi</span><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::before</span> {</span>
<span id="cb2-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">background-image</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data:image/svg+xml,&lt;svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="%234a5568" class="bi bi-moon-stars-fill" viewBox="0 0 16 16"&gt;&lt;path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z"/&gt;&lt;path d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"/&gt;&lt;/svg&gt;'</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">!important</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">}</span>
<span id="cb2-8"></span>
<span id="cb2-9">body<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-dark</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.quarto-color-scheme-toggle</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.bi</span><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::before</span> {</span>
<span id="cb2-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">background-image</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data:image/svg+xml,&lt;svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="%23d1d5db" class="bi bi-sun-fill" viewBox="0 0 16 16"&gt;&lt;path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.414a.5.5 0 1 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707z"/&gt;&lt;/svg&gt;'</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">!important</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11">}</span></code></pre></div>
<p>I’m basically just loading icons from the built-in bootstrap icon set, filling them with a color from each of my themes, and targeting the CSS of the toggle. I also added a bit of space so that the icon is not right next to the search button.</p>
<p>The part that took me some trial and error was that the dark mode icon is selected slightly differently than the light mode one. Also, in both cases I use the before pseudo-element so that I can inject these elements without modifying the HTML.</p>
<p>This works pretty well as I hope you can see from this site!</p>
<p>So in case you were also looking to change the icon, feel free to use/modify the above. Should it be broken by the time you read this, you can always check my source files :)</p>



 ]]></description>
  <category>quarto</category>
  <category>webdev</category>
  <guid>https://lukmayer.github.io/blog/posts/switcher.html</guid>
  <pubDate>Sun, 15 Jun 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/light_and_dark.png" medium="image" type="image/png" height="104" width="144"/>
</item>
<item>
  <title>How to have theme-adaptive comment sections in Quarto websites</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/utterance_theme.html</link>
  <description><![CDATA[ 





<p>Quarto sites can very easily have comment sections thanks to some pretty creative uses of GitHub Issues.</p>
<p>If you wanted to add a comment section to a page on your Quarto website usually you’d use something like this in your YAML front-matter:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comments</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">utterances</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">repo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> username/reponame</span></span>
<span id="cb1-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github-dark</span></span></code></pre></div>
<p>The problem with this is that you are locked into one theme. So if someone is browsing your site in light mode they might have to stare at an uncomfortably dark comment section. Or alternatively, some basement dweller’s eyes are burnt to a crisp by your glaringly white comment section.</p>
<p>Utterances itself has an option where you can set the theme to adapt to the user’s system theme, but this option does not appear to be implemented in Quarto.</p>
<p>Given that Utterances clearly already has the capability to change theme, I figured it could not be all too difficult to work around the fact that this particular setting is not currently functional in Quarto.</p>
<p>Indeed, I managed to get it working fairly quickly with simple HTML includes. What made this tricky is that in my initial solution, the theme would be set on page load. This meant that you could still experience a mismatch if you switched the theme while on the current page. Resolving this took a bit of JavaScript to ensure that theme changes are detected at the right times:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">div</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utterances-container"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">div</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">div</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utterances-container"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">div</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> UtterancesThemeManager {</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">constructor</span>() {</span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">container</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utterances-container'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loaded</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">init</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11">  }</span>
<span id="cb2-12"></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getTheme</span>() {</span>
<span id="cb2-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> checks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb2-15">      () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">classList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'quarto-dark'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-16">      () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">documentElement</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">classList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'quarto-dark'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-17">      () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data-bs-theme'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-18">      () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">documentElement</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data-bs-theme'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-19">      () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">classList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-20">      () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">documentElement</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">classList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contains</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span>)</span>
<span id="cb2-21">    ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-22"></span>
<span id="cb2-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> checks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">some</span>(check <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-24">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> { <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> { <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> }</span>
<span id="cb2-25">    }) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'light'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-26">  }</span>
<span id="cb2-27"></span>
<span id="cb2-28">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">waitForPageReady</span>() {</span>
<span id="cb2-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Promise</span>((resolve) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-30">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> checkReady <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> conditions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb2-32">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">readyState</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'complete'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-33">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">offsetHeight</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb2-34">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">window</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getComputedStyle</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">backgroundColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb2-35">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'link[rel="stylesheet"]:not([media="print"])'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> </span>
<span id="cb2-36">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelectorAll</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'link[rel="stylesheet"]:not([media="print"])'</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">every</span>(link <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> link<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet</span>)</span>
<span id="cb2-37">        ]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-38"></span>
<span id="cb2-39">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (conditions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">every</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Boolean</span>)) {</span>
<span id="cb2-40">          <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(resolve<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-41">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-42">          <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(checkReady<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-43">        }</span>
<span id="cb2-44">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-45"></span>
<span id="cb2-46">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">checkReady</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-47">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-48">  }</span>
<span id="cb2-49"></span>
<span id="cb2-50">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">async</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadUtterances</span>() {</span>
<span id="cb2-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loaded</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-52"></span>
<span id="cb2-53">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb2-54">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">waitForPageReady</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-55"></span>
<span id="cb2-56">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getTheme</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-57">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Promise</span>(resolve <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(resolve<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-58"></span>
<span id="cb2-59">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> stableTheme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getTheme</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-60">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!==</span> stableTheme) {</span>
<span id="cb2-61">        theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stableTheme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">await</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Promise</span>(resolve <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(resolve<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-63">      }</span>
<span id="cb2-64"></span>
<span id="cb2-65">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Loading Utterances with theme:'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> theme)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-66"></span>
<span id="cb2-67">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">container</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-68"></span>
<span id="cb2-69">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> script <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createElement</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'script'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-70">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://utteranc.es/client.js'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-71">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'repo'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lukmayer/site_comments'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-72">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'issue-term'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pathname'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-73">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'theme'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'github-dark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'github-light'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-74">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'crossorigin'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'anonymous'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-75">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setAttribute</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'async'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-76"></span>
<span id="cb2-77">      script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onload</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-78">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">loaded</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-79">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Utterances successfully loaded'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-80">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-81"></span>
<span id="cb2-82">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">container</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">appendChild</span>(script)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-83"></span>
<span id="cb2-84">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb2-85">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Error loading Utterances:'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> error)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-86">    }</span>
<span id="cb2-87">  }</span>
<span id="cb2-88"></span>
<span id="cb2-89">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateTheme</span>() {</span>
<span id="cb2-90">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> iframe <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">querySelector</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.utterances-frame'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (iframe) {</span>
<span id="cb2-92">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getTheme</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-93">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> utterancesTheme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> theme <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'github-dark'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'github-light'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-94"></span>
<span id="cb2-95">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span> {</span>
<span id="cb2-96">        iframe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contentWindow</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">postMessage</span>(</span>
<span id="cb2-97">          { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'set-theme'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">theme</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> utterancesTheme }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-98">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://utteranc.es'</span></span>
<span id="cb2-99">        )<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-100">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Updated Utterances theme to:'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> theme)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-101">      } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">catch</span> (e) {</span>
<span id="cb2-102">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warn</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Failed to update Utterances theme:'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> e)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-103">      }</span>
<span id="cb2-104">    }</span>
<span id="cb2-105">  }</span>
<span id="cb2-106"></span>
<span id="cb2-107">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setupObservers</span>() {</span>
<span id="cb2-108">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> updateTimeout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-109">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> debouncedUpdate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-110">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">clearTimeout</span>(updateTimeout)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-111">      updateTimeout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">updateTheme</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-112">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-113"></span>
<span id="cb2-114">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> observerConfig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-115">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">attributes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-116">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">attributeFilter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data-bs-theme'</span>]</span>
<span id="cb2-117">    }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-118"></span>
<span id="cb2-119">    [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">documentElement</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">forEach</span>(element <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-120">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">const</span> observer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">MutationObserver</span>(debouncedUpdate)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-121">      observer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>(element<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> observerConfig)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-122">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-123">  }</span>
<span id="cb2-124"></span>
<span id="cb2-125">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">init</span>() {</span>
<span id="cb2-126">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setupObservers</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-127"></span>
<span id="cb2-128">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">readyState</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">===</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loading'</span>) {</span>
<span id="cb2-129">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">window</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">addEventListener</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'load'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> () <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb2-130">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadUtterances</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-131">      })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-132">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-133">      <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">setTimeout</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadUtterances</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-134">    }</span>
<span id="cb2-135">  }</span>
<span id="cb2-136">}</span>
<span id="cb2-137"></span>
<span id="cb2-138"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UtterancesThemeManager</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-139"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-140"></span></code></pre></div>
<p>Using this more complicated include requires the following setup for the page meant to include the comment section:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-after-body</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ../../_includes/utterances.html</span></span></code></pre></div>
<p>Which means that the big chunk above should be saved to a file that’s accessed in the include-after-body setting. In case you don’t know, this uses relative paths, where <code>./</code> would be your project’s root directory and <code>../</code> simply means navigating up one directory from the source file location.</p>
<p>Hope this helps! If something is unclear, leave a comment in the theme-adaptive comment section below and I’ll try to clarify.</p>



 ]]></description>
  <category>quarto</category>
  <category>webdev</category>
  <guid>https://lukmayer.github.io/blog/posts/utterance_theme.html</guid>
  <pubDate>Sun, 15 Jun 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/light_and_dark.png" medium="image" type="image/png" height="104" width="144"/>
</item>
<item>
  <title>Is it even possible to avoid big-tech?</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/sticky_tech.html</link>
  <description><![CDATA[ 





<p>Have you ever had a thought that goes something like “Do I really need &lt;something&gt;”? I definitely have. Over the years, I have done some silly multi-week experiments to assess things like: what would it be like to sleep without a pillow, live without a mirror, work without a chair. Why? Just to challenge my habits, I think.</p>
<p>Currently, I guess I have two experiments going on: growing my hair out fairly long, and doing without “big-tech”. Obviously, the latter one is what this post is about.</p>
<p>The motivation for this experiment goes something like: Why does everyone use the same software? If you think about it, for PC operating systems you get a choice of macOS (Apple), Windows (Microsoft); for phones you get iOS (Apple), and Android (Google); for apps, it’s either Apple’s App Store, or the Google Play Store; for browsers you only really get Chrome (Google) with Google as the search engine. Most normal people either use Google Drive or OneDrive (Microsoft). Productivity apps either come in the form of Microsoft 365 or Google’s App suite. For E-mail everyone has a Gmail account and most will also have an Outlook (Microsoft). Messaging is done on either iMessage (Apple), WhatsApp (Meta), Messenger (Meta, again). Social media is mostly stuff owned by Meta, with LinkedIn owned by Microsoft. There’s probably more one could add to the list… The point is, is it really necessary to operate in a tech ecosystem where every niche seems to be some kind of de facto mono/duo/oligopoly<sup>1</sup> involving a random choice from the same four (-ish) companies?</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;I write “de facto” because determining the monopoly status of these companies is evidently quite difficult under current competition law.</p></div></div><p>I didn’t know I was going to embark on this experiment at the time, but technically my journey started by wondering if Chrome was really serving me all that well. I remember finding Google products frustrating because they never really offered any settings to tweak. Of particular annoyance to me at the time was that many Google products lacked a dark mode setting. Sometimes the settings page of these apps felt more like an empty placeholder accidentally left in rather than the polished product of some billion-dollar company. Why was Google assuming that all of their billions of users used their products exactly the same way? I wasn’t that committed to using Chrome, so I shopped around. My initial browser switch was to Opera, which was pretty customizable compared to Chrome then (still is).</p>
<p>Microsoft products were typically much more customizable than Google’s offerings, so for a while I considered myself a Microsoft fan. Besides Windows, I was using Outlook, OneNote, Word, Excel, PowerPoint, OneDrive, even their dedicated To-Do app and Android Launcher. That only really started to change when Windows 11 rolled out, where seemingly all options had been stripped away, with annoyances now impossible to turn off. It drove me nuts, so I decided to try Ubuntu. Linux definitely is something one needs to get used to because it can uproot so much of an average person’s software stack. However, once I adjusted I never felt it worth going back. Thankfully, most things are web-based nowadays, so as long as you have a browser a normal person can be just fine.</p>
<p>These days, I really only have a few things left that have proven very sticky. For some things, my hands are simply tied. For example, my university compels me to use Gmail and Microsoft Teams for my work. If it wasn’t for that my only use of Google products would be Google Voice because I have a VoIP number that I don’t want to pay monthly for, and the Google Play Store because commercial apps are not put anywhere else. As a partial remedy, I generally use F-droid wherever I can or just use services on Desktop (where there usually is much more choice) instead of my phone. Social media is also surprisingly sticky; I still don’t find myself able to delete WhatsApp because it’s so ubiquitous in Europe and I also technically still have a LinkedIn account<sup>2</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;I think I have a vague sense of it potentially being helpful for a future job search. Although I can’t say I have ever found a job through LinkedIn.</p></div></div><p>There is also stuff that I could do without but have not touched yet. I use Google Scholar and GitHub (Microsoft) pretty regularly, this very website is currently hosted on GitHub. My research data goes to a Google Firebase database. I think I am just a bit ignorant about alternatives when it comes to these. Give me a few more weeks, and perhaps I’ll have switched these too or at least have a good reason for why not.</p>
<p>So is it still possible to go without big-tech? You can avoid large parts of the big-tech ecosystem, but only with some notable caveats, so the short answer is no. For one, it took me the better part of 3 years to slowly transition away as much as I could, bit by bit. I think switching E-mails nicely paints the problem. You are free to choose any E-mail service you like, but if you have a Gmail you can use it to log in to all kinds of services, and as you start using this Gmail to register for various things, it becomes more and more effortful to move all of those things to a different, non-Gmail account. In other words, it takes a serious, prolonged effort to abstain from big-tech services. And even if you have the will, chances are someone else will still compel you to use some big-tech provisioned services. It was only a few months ago where an academic journal obliged me to use <strong><em>Premium</em></strong> Adobe Acrobat Reader to fill out a form that was so bare-bones it could just as well have been a simple text file. I should also mention that some of the stuff I ended up using is still heavily dependent on big tech. For example, most browsers are built on the Chromium open source project, managed by Google<sup>3</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn3"><p><sup>3</sup>&nbsp;Similarly, Android alternatives are typically made from Google’s Android Open Source Project.</p></div></div><p>Is abstaining even worth it? In some ways, maybe yes. I pay fewer subscriptions than I used to. I don’t have to buy “premium” products that lock me into an ecosystem and I don’t have to deal with ads or other “features” being shoved down my throat. In other ways, for many people, not really. For example, Linux undeniably has some jankiness that makes it hard(er) to use in many everyday settings than other operating systems. I don’t see myself going back though because I value the freedom to set it up to whatever I like highly and don’t mind occasional use of the terminal.</p>
<p>I wonder what these things will be like in 10–20 years? Will it be yet more of the same with additional domains monopolized, will big companies maybe have been split up in a way that is actually productive for sustained competition, or will some kind of massive libre software revolution suddenly materialize out of thin air? On the one hand, I get the sense that software is more vulnerable to de facto monopolies compared to industries that operate in the material world<sup>4</sup>, so I do think this phenomenon of specific niches being utterly dominated by one or two big companies is unlikely to go away completely. On the other hand, it does also feel like more and more people are holding views according to which some types of software should be considered public goods and managed as such. It will definitely be interesting to see which path we end up going down.</p>


<div class="no-row-height column-margin column-container"><div id="fn4"><p><sup>4</sup>&nbsp;Because of increased potential to benefit from virality, popularity- and network effects.</p></div></div>

 ]]></description>
  <category>software</category>
  <guid>https://lukmayer.github.io/blog/posts/sticky_tech.html</guid>
  <pubDate>Sun, 18 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/big_tech.png" medium="image" type="image/png" height="71" width="144"/>
</item>
<item>
  <title>How I find interesting blogs to follow</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/feeds.html</link>
  <description><![CDATA[ 





<p>I’ve been using RSS feed readers for a while now, and it’s definetely become my favorite way of keeping up with things. Why? Simply because it’s so effortless.</p>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>If you don’t know what RSS is, I’ve written about it previously <a href="https://lukmayer.github.io/blog/posts/rss.html">here</a></p>
</div></div><p>With RSS I follow Blogs, YouTubers, Scientific Journals, Newsletters, Mastodon “tooters”, and BlueSky “skeeters”! I don’t even have an account with Youtube or Bluesky, and thanks to RSS I don’t need one. In short, RSS is the universal subscribe button for many parts of the internet.</p>
<p>Since RSS is just a standardized format for publishing website updates, rather than a platform, there is no recommendation of new content built in. This can be good in the sense that I do not have to scroll through “Recommended” content where it is questionable <em>who</em> finds the post at hand recommendable, like is the case with most big social media platforms. On the flipside, it can also be a disadvantage especially when first getting started with RSS feeds since you probably won’t know what to follow.</p>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>Another thing I really appreciate is the complete lack of “trending” style content, which to me sometimes feels more like the billboard for rage-bait posts. Also, no ads, and since you’ll only be following real people, no AI generated stuff.</p>
</div></div><p>I initially used RSS exclusively to follow scientific journals that were publishing in my topic area. Then I migrated my existing Youtube subscriptions. Only when I started looking into the Fediverse a bit, did I learn about tools people use for finding other content. Today, I want to share two of these.</p>
<p>Both tools are simple feed recommenders. First up is <a href="https://indieblog.page">indieblog.page</a>, which is essentially a curated list of personal blogs. They offer RSS feeds for you to follow that will pick a set number of posts from these blogs and link them to you. So for example, every day I see 10 posts from random people pop up in my RSS feed from Indieblog. A lot of it is Software Engineers talking about some coding problem or hobby project that is beyond my appreciation, but a few times a week at least one of these random posts catch my interest. So if I see something interesting, I check out the rest of their site, and if it looks interesting I’ll follow their blog.</p>
<p>Second is the <a href="https://kagi.com/smallweb">Kagi Small Web</a> another curated list of web-blogs, maintained by the Kagi search engine folk. Here the design is a bit different. The interface shows one random, new blogpost from a site in the list. The UI let’s you click through these, like them, and see what other people using the service like. There are filters for smaller YouTube channels, and comics. There is an RSS feed, but it will likely spam you to death since it will show all recent posts happening from the blogs in the list. I mostly use this when I am really bored and only have my phone, like when sitting on a bus or a waiting room. I simply cycle through until I see something interesting. If something seems worth following I’ll save the URL somewhere so I can follow the site later.</p>
<p>If you’re getting started with RSS or looking for new stuff, be sure to give these a spin.</p>



 ]]></description>
  <category>rss</category>
  <guid>https://lukmayer.github.io/blog/posts/feeds.html</guid>
  <pubDate>Sun, 11 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/reading.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Have we reached maximum click-bait yet?</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/socials.html</link>
  <description><![CDATA[ 





<p>I’ve never been much into social media. There was a period where I used Instagram to follow my friends and artists I liked. Facebook I only used very briefly as an undergrad. Technically, I still have a LinkedIn account that receives no attention from me. However, even back in my social media days I noticed the tendency of these platforms to show you stuff that will grab your attention whether you like it or not.</p>
<p>Since then, I’ve been exploring Fediverse platforms like Mastodon and Lemmy. But all platforms I have tried have this same problem of incentivizing what I would call rage- or clickbait<sup>1</sup>. The problem I have with these phenomena is that they are cheap, ubiquitous signals that serve to manipulate. An attention-grabbing essay title that does not follow the clickbait format is really different in this regard, as an interesting title at least has some correlation to the quality of the writing.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;I use these terms fairly liberally to basically encapsulate anything that is tailor-made to be attention-grabbing, like using very strong wording or misleading images.</p></div><div id="fn2"><p><sup>2</sup>&nbsp;Academia has a similar problem, since how many papers you publish is far more important for your career than how “good” those papers are. The quality metric, citations, is deeply flawed too. At least university departments put in a bit of effort to look at your papers before inviting you to interview, assuming of course you made it to the stage where they check.</p></div></div><p>Essentially, I don’t think popularity metrics are very useful for distinguishing between quality (where engagement comes through resonance with the audience) and rage-bait (where engagement comes from tricking people into boosting the metrics). I have a feeling that platforms which serve to make content creation as easy as possible will never be able to solve this, as accessibility necessarily induces more low-quality content. In other words, short-form text, photos, and video clip producers will always be incentivized to clickbait<sup>2</sup>.</p>
<p>I should say though, Mastodon can be made sane. It is up to you though. This is because Mastodon allows you to hide posts that contain keywords of your choosing. So you can maintain a list of keywords you classify as ragebait-like in nature and so only see the stuff that’s left after that. Of course, that requires some effort, continuous vigilance, and being ok with never seeing the false positives. If you want to use Mastodon, I would generally recommend being pretty liberal in your use of filter words.</p>
<p>How to stop gaming of metrics? Simple, have no metrics. The problem of course is that no-one would find a “Trending” tab that really is just a “Random” tab very worthwhile. “Popular” content is used to on-board new users and popularity is also used to make decisions about what to recommend. Ironically, a social media platform that does away with inadvertently incentivizing garbage by default would never be accessible enough to have main-stream appeal.</p>
<p>Is any of this unique to social media? Of course not. We could easily think of news outlets increasingly following a similar recipe. These trends towards maximum clickbait make me a bit worried about where democracies are headed, especially now with AI making influence campaigns nigh fully automatable. Until we have found a good way to address these problems, it’s probably best you make sure you control what stuff is on your feed, and help your friends do the same.</p>




 ]]></description>
  <category>social media</category>
  <guid>https://lukmayer.github.io/blog/posts/socials.html</guid>
  <pubDate>Sun, 11 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/fishing.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Why is nature so disturbing?</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/nature.html</link>
  <description><![CDATA[ 





<p>Why is it that I find the more gruesome scenes in nature documentaries so hard to watch, when I myself am an animal? A meat-eating animal at that. Why do I notice a reaction that seems to implicitly reject the axioms of natural selection, a system I cannot opt out of? This internal hypocrisy has been puzzling me a bit recently, and in this post, I want to dissect my intuitions a bit.</p>
<p>One convenient and intuitive explanation for the reaction I observed within myself comes from the fact that my brain can’t help but feel the pain of the prey animal featured in the documentary. But I actually think that there is more to it than just empathy.</p>
<p>Something that came to mind is that perhaps part of that reaction stems from the fact that we operate in rules-based systems and so live largely removed from mortal violence. Society has devised pretty elaborate procedures to ensure relatively fair outcomes for everyone (it’s definitely still work in progress). Just as a quick refresher, consider the fact that the animal kingdom does not have courts, insurance, healthcare, or institutionalized social safety. These are all human inventions because we do not like the alternative. So I think part of the gut reaction arises from the unexpected reminder that the default system in nature is one free of safety, justice, and any sense of certainty.</p>
<p>Of course, we also choose to be ignorant about the “struggle for survival”. When was the last time you had to provision your own meat? Few of us can say to have ever gone through the full process. The anonymous meat package from the supermarket removes us wholly from the fact that we still operate within the sometimes brutal bounds of nature, whether we like it or not. Maybe one day we can all successfully do without animals for food, but for now we still largely live like predators so sophisticated that they have forgotten how to hunt.</p>
<p>The question I want to ask though, is whether this rejection of where we come from is an asset or a risk? I currently hold that it’s a bit of both.</p>
<p>Arguing against human ignorance is easy-pickings. Of course we should not forget that when it really comes down to it, we are just like any other animal fighting for survival. We are not special and our societies are not special either. History tells us that the rules we like so much are actually very fragile, and can be undone in a heartbeat. We should never forget that we are not above nature, simply part of it. The relative stability many of use live in today requires constant maintenance, and should not be taken for granted.</p>
<p>On the other hand, I think it’s interesting that we collectively seem to have this internal drive to create societies with special properties that deemed desirable. Ones where altruistic behaviors extends far beyond kinship, or any sort of personal relationship. For example, the nameless bureaucrat signing off your insurance claim has no interest in you whatsoever, probably has never met you, and yet they are technically doing you a significant favor. Over millenia, people have, whether intentionally or not, tinkered on how to organize large groups of people in a way that allows living together in relative peace and prosperity. So in a really weird way, the fact that you do not really know where your supermarket meat came from shows that you are part of a system that has offered you the luxury of not having to know. And just maybe, being so pampered allows us to think about where to take things next? After all, we never feel that our societies have arrived at an optimal state.</p>
<p>So in sum, what I conclude from this thought experiment of sorts is that nature documentary have a real knack for reminding us what the default setting for life is like. Perhaps more philosophically, this might reinforce that resisting a return to these unstructured circumstances requires constant and continuous effort thanks to our self-destructive tendencies. At the same time, we’re never happy and always want things to be better so it’s not like we can stop tinkering either. Maybe with all of this in mind, I will be better able to appreciate the reaction from within me the next time I see a lion approaching an unsuspecting gazelle…</p>



 ]]></description>
  <category>life</category>
  <guid>https://lukmayer.github.io/blog/posts/nature.html</guid>
  <pubDate>Sun, 04 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/zebra.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>More awesome browser extensions</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/extensions2.html</link>
  <description><![CDATA[ 





<p>I previously wrote about some extensions I use to <a href="https://lukmayer.github.io/blog/posts/essentials.html">block ads, reduce the addictiveness of sites like Reddit and Youtube</a>, and improve my experience on <a href="https://lukmayer.github.io/blog/posts/duolingo2.html">Duolingo</a>.</p>
<p>In this post, I’ll share some other extensions I really like that have more niche applications.</p>
<p><br>
</p>
<section id="pdf-reader" class="level2">
<h2 class="anchored" data-anchor-id="pdf-reader">PDF Reader</h2>
<p>My browser of choice, <a href="https://vivaldi.com">Vivaldi</a>, is based on Chromium, the open-source code component of Google’s Chrome browser. As far as I am aware, all Chromium-based browsers (including Chrome itself) use a very bare-bones PDF reader with the single exception of Microsoft Edge. There was a period of time where I used Edge for the sole reason that it had a really powerful PDF reader that allowed you to highlight text and add comments.</p>
<p>Of course, thanks to extensions we can simply replace the rather useless PDF reader your favorite browser comes with. Adobe has an extension that serves this purpose, but like all Adobe products it heavily nudges you to pay for a subscription, and has a questionable privacy policy.</p>
<p>So if you’re ok with trading some additional privacy and sanity for something a little bit less powerful than Adobe’s offering then I have something for you. One benefit of Mozilla developing Firefox as an open-source project is that their PDF reader is also open-source. It’s no shock then that someone took Mozilla’s PDF.js library and turned it into a Chrome extension. The extension is simply called “PDF Reader” on the Chrome Web Store, and can be found <a href="https://chromewebstore.google.com/detail/pdf-reader/ieepebpjnkhaiioojkepfniodjmjjihl">here</a>.</p>
<p>It’s pretty handy. One thing to keep in mind is that viewing pdfs from websites will open them in a local url, so you can’t just copy the url from the address bar. Instead, you have to click a button in the top right corner of the PDF reader to save the link to the document.</p>
</section>
<section id="vimium-c" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="vimium-c">Vimium C</h2>
<p>Vim is a text editor that is very popular among programmers. It’s known for its steep learning curve and powerful keyboard shortcuts. Vim keybindings are so popular that many applications offer them as an option. For example, many coding IDEs have a Vim mode (sometimes called Evil mode). <a href="https://chromewebstore.google.com/detail/vimium-c-all-by-keyboard/hfjbmagddngcpeloejdejnfgbamkjaeg">Vimium C</a> is simply an extension that offers Vim mode for your browser<sup>1</sup>. The keybindings are sometimes as expected, sometimes a little different due to the browser not being a text editor. But overall, if you know Vim, it’s a treat to use.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;“Vimium” (without the C) is definitely the OG Vim browser extension, but I prefer Vimium C because it has slightly better looks, and slightly more features that I find useful. Vimium C is open-source.</p></div></div><p>My favorite part feature is the ability to navigate links, scroll, and open new tabs all via very simple Keyboard shortcuts. For example, if you press <code>f</code>, a little overlay will appear that shows you a button combination you can press to open any link on the page. If you hold <code>shift</code> while pressing the buttons for a link, it will open the link in a new tab. If you want to use the keyboard shortcuts that a website has defined, you simply press <code>i</code> to enter insert mode, and then you don’t have to worry about Vimium C interfering with the website’s shortcuts. For scrolling, you can use the familiar <code>j</code> and <code>k</code> keys to scroll down and up, respectively. This extension also has <code>u</code> and <code>d</code> for scrolling up and down a screen worth of content, and <code>gg</code> and <code>G</code> for scrolling to the top and bottom of the page, respectively. It feels awesome, especially when paired with Vivaldi, which already has pretty powerful keyboard shortcut options.</p>
</section>
<section id="tampermonkey" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="tampermonkey">Tampermonkey</h2>
<p>Like Vimium C, <a href="https://chromewebstore.google.com/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a> is an extension whose idea appeals to programmers. It simply allows you to automatically inject some JavaScript code into any website. At first regard, this seems ridicously niche. But hear me out, I’ll give some examples to show why it’s extremely useful.</p>
<p>So as you know, I use an Ad-blocker. Youtube recently has taken a lot of issue with ad-blockers. So what they started doing is to pause my video from playing to show a message that basically says “Adblockers are not allowed on Youtube”. Naturally, this message can only be dismissed after a timer runs out. Every detail of this design is meant to be annoying, and I’m simply not going to disable my ad-blocker.</p>
<p>So what did I do? I open the browser console, and copy the HTML of the element that contains the pop-up message. I ask an LLM to write a little script that removes the element from the page for Tampermonkey. I paste the code into Tampermonkey. Boom, no more annoying pop-ups. I could have probably written a script like this myself with a little tinkering, but what you should take away from my example is that you don’t even have to be a coder anymore to use Tampermonkey. It took me less than 2 minutes to completely get rid of a “feature” that some developer at Youtube probabily spent weeks on refining to maximize ad money gains. That is seriously powerful<sup>2</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;It may be worth mentioning that you used to be able to do something very similar using UBlock Origin’s element picker. However, this extension has been effectively neutered on Chromium browsers (because Google dislikes ad-blockers), meaning you would only be able to make use of this functionality on Firefox and its derivatives.</p></div><div id="fn3"><p><sup>3</sup>&nbsp;I prefer not being able to “doom-scroll”.</p></div></div><p>A second, less striking example is simply removing stuff from sites that I don’t want to see. Much like the extensions I use to strip addictive features from Reddit and Youtube, I use Tampermonkey to remove elements from sites that don’t receive enough attention to have a dedicated extension. For example, I personally don’t care for the Trending section of Mastodon (called ‘Explore’), because you can’t run out of content to scroll there, unlike your home feed<sup>3</sup>. So I simply made a Tampermonkey script that removes the button for the Explore page on the Mastodon instance I use.</p>
<p>So essentially, every time you see a feature on a website that you don’t like, you can use Tampermonkey to remove it. Nice.</p>


</section>


 ]]></description>
  <category>extensions</category>
  <guid>https://lukmayer.github.io/blog/posts/extensions2.html</guid>
  <pubDate>Sat, 03 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/puzzle.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Whether we have free will or not should be inconsequential</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/free_will.html</link>
  <description><![CDATA[ 





<p>I’m currently taking a class on Consciousness. Today’s topic was around some of the research evidence against free will, and whether free will is possible if true randomness exists (apparently it does).</p>
<p>The discussion was interesting and got me thinking. I noticed a lot of my peers, all PhD students, some in Bio-engineering, some in Cognitive Science, seemed to neither fully subscribe to determinism nor to free will, instead questioning or reframing how free will is defined.</p>
<p>To be honest, I was completely comfortable with (hard) determinism going into the class, so I was suprised that many tried to find a middle ground.</p>
<p>After a bit of thought, I think I have a theory for why. People doing research in biology and Cognitive Science certainly do not think of the systems they are studying as magically operating outside the constraints of the material world. For example, a core belief in Cognitive Science is that the brain implements thought (among other things) through computation. And this computation can be reverse-engineered. It’s just that the brain is mega ultra super complicated, so we have a hard time understanding what’s going on beyond highly-controlled lab settings. So beliefs about determinism basically come with the job.</p>
<p>At the same time, academic circles almost universally hold views that would certainly reject the grim, reductive description of human experience that hard determinism implies. So I think the gut reaction is that we do not like dehumanizing ourselves and other people by denouncing free will. I suppose it’s similar to how thinking about the unavoidability of one’s own death can become seriously uncomfortable, leading one to look for a resolution with which we can sleep at night. And I think it’s awesome that we have this instinctive reaction to hold ourselves (collectively) to a high standard!</p>
<p>I also don’t mean to claim to be free of this bias in the slightest. If anything, I just separated professional and personal beliefs during that discussion. That being said, there were some people in the class who very adament about there being free will rather than looking for a compromise, so my theory definitely does not apply to everyone either.</p>
<p>Either way, all of this got me thinking about what we should do if one day, science were to say “Without any doubt, free will does not exist.” or maybe the inverse of that staement. Although no serious scientist would ever utter such an absolute statement, let’s entertain the possibility. Should we re-design our societies depending on which side of the question the answer falls?</p>
<p>In short, I think the answer ought to be “<strong>No</strong>”.</p>
<p>Simply put, the way we treat each other should not depend on the answer to this question at all.</p>
<p>I think my thinking here is influenced by my interpretation of the spirit in which the first article of the German constitution was written.</p>
<p>Verbatim, the first sentence of §1 reads:</p>
<blockquote class="blockquote">
<p>“Die Würde des Menschen ist unantastbar”.</p>
</blockquote>
<p>In English, this could be translated to:</p>
<blockquote class="blockquote">
<p>“The dignity of the person is inviolable”.</p>
</blockquote>
<p>To me, my interpretation of this paragraph aligns with the gut reaction I described above, that we ought to treat each other with dignity and so refrain from dehumanizing each other via a reductive interpreation of human nature. So despite what some businessmen who frequent news headlines more than I appreciate seem to think, I opine that empathy is not a weakness.</p>
<p>So how should we structure the systems of our societies given that we want to treat each other with dignity? Having free will implies full accountability for one’s actions. Not having free will implies that we essentially have no control over our actions. This poses a problem when you want to figure out what dignified treatment implies, which of course is the premise of this post. While the question of how to structure society is not one I am qualified to answer, I will give my two cents.</p>
<p>My answer is inspired by the Fundamental Attribution Error, a well known effect in psychology. The Fundamental Attribution Error states that we tend to attribute the mistakes of others to their character, while we attribute our own mistakes to the circumstances we happened to find ourselves in.</p>
<p>With a similar dualism in mind, I have come to think that we ought to treat each other as if we have free will in light of accomplishments, while treating each other as if we are limited in our free will in light of mistakes.</p>
<p>To me, this resolution appears maximally compliant with my interpretation of dignified treatment. It seems to align with Christian beliefs around the forgiveness of sins. It also addresses that internal conflict I described, where we want to hold ourselves to a high standard, while also recognizing that circumstance can play a significant role in how we ultimately act.</p>
<p>In conclusion, I’m a hobby philosopher now. I hope you enjoyed.</p>



 ]]></description>
  <category>phd</category>
  <guid>https://lukmayer.github.io/blog/posts/free_will.html</guid>
  <pubDate>Fri, 02 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/will.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Bread in the USA</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/usa.html</link>
  <description><![CDATA[ 





<p>I don’t mean to complain too much about what my life is like in the USA.</p>
<ul>
<li><p>The weather here in California is always monotonously pleasant</p></li>
<li><p>Americans are super friendly, welcoming, and helpful</p></li>
<li><p>My university is excellent</p>
<ul>
<li>My workplace is unionized</li>
<li>My rent is heavily subsidized, housing is guaranteed</li>
<li>My department is full of excellent researchers</li>
<li>Even my grad student health insurance is good, in 2 years I have never spent more than $80 on a procedure</li>
</ul>
<p>The point is, things are good. I’d even say they are great. I am very happy and grateful for the life I have here.</p>
<p>But, as a German, there is one thing that I can’t seem to get over. And that is American’s taste in baked goods, especially bread.</p>
<p>This was already a problem when I lived in the UK, so maybe Anglo-Saxon countries are just hard-wired to be problematic to me in this regard.</p>
<p>In the UK, while bread may have been a bit soulless here and there, it was always possible to find something that I felt was edible, even at the supermarket.</p>
<p>Over here, the choice seems to be between a) full of sugars and additives, or b) completely void of everything, including taste. I even tried going to a farmer’s market to see what the fancy people are eating. But even there, the breads looked less interesting than some of the stuff I was able to dig out of UK supermarkets.</p>
<p>Germans in the UK really like to complain about the bread in the UK. To be honest, the gap between UK and US is much larger than the gap between UK and Germany.</p>
<p>Is there a fancy artisan bakery somewhere in Orange County that might be able to help me out? Probably. I feel like driving for 20+ minutes in one of the largest Metro regions of the USA shouldn’t be necessary for a nice household staple but maybe that’s just me. In practice, I am stuck with what I can reach by foot, bike, bus, or can get delivered.</p>
<p>So in conclusion, I have been pondering just taking the hit and baking bread myself. So perhaps this complaining post is my cry for help. I don’t think I’m desperate enough quite yet, but if you see me posting about sourdough starters in a few weeks, you’ll know I’ll have finally snapped.</p></li>
</ul>



 ]]></description>
  <category>phd</category>
  <category>life</category>
  <guid>https://lukmayer.github.io/blog/posts/usa.html</guid>
  <pubDate>Fri, 02 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/bread.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Simplifying my site</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/simple_blog.html</link>
  <description><![CDATA[ 





<p>I noticed that I don’t post as regularly as I used to. I think this is due to me turning a lot of the blog posts into mini-projects. Believe it or not, but I usually spend the better part of a day on one post. Sometimes it takes up the whole weekend. I seem to have reached a point where I have an idea but don’t feel it’s big enough to warrant a full post. Then there’s also some of the file management stuff that I don’t particularly enjoy, like collecting the images and setting up the post in my site directories. It’s all just a bit too much friction. So I decided to take inspiration from many of the blogs I read, which is to just keep it dead simple.</p>
<p>I’ve cut out a lot of the “Schnick-Schnack” and just kept the old content as is. I’ve also created a little shell script to help me create new posts more easily. All of this so that I can move on to more casual writing, where I’ll post whatever popped into my mind without worrying about its grandeur. I think I’ll also create a Now page. I like how they contrast the static and more curated feel of a personal website.</p>
<p>Here goes the first post in this new format!</p>



 ]]></description>
  <category>webdev</category>
  <guid>https://lukmayer.github.io/blog/posts/simple_blog.html</guid>
  <pubDate>Thu, 01 May 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/dots.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>How to remote control a Quarto presentation</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/reveal_multiplex.html</link>
  <description><![CDATA[ 





<p>The Quarto documentation for RevealJS presentations has a little section on how to set up <a href="https://quarto.org/docs/presentations/revealjs/presenting.html#multiplex">Multiplex</a>. The way it works is that RevealJS automatically creates a server hosted by the RevealJS team that syncs the slide change events (they do not see the slide content). The stated premise for this feature is that other people can view your slides on their devices, with the slideshow advancing in sync with the speaker.</p>
<p>To be honest, I did not see why anyone would want that. Surely your audience would be better off being able to go back and forth through the slides at their own pace?</p>
<p>But then, a few days ago, a little lightbulb went off in my head. I basically realized that this feature could be used to remote control a presentation. What’s that good for? Well, suppose you are at a conference or something, and the “Oh god do I have the right adaptor for this unknown computer?!?” fear strikes you again. Using multiplex, you could just access your slides by browsing to your website with the unknown computer, and use your phone or another device to control the slides. Assuming internet connectivity, no compatibility issues, guaranteed. Also, everyone will recognize you for being very cool, indeed.</p>
<section id="demo" class="level2">
<h2 class="anchored" data-anchor-id="demo">Demo</h2>
<p>Curious? Here’s an example slide deck:</p>
<iframe src="../../../presentations/multiplex.html" width="800" height="600" frameborder="0" allowfullscreen="">
</iframe>
<p>If you click <a href="../../../presentations/multiplex-speaker.html">here</a> on your phone or any other device, you will be able to control above slides.</p>
<p>There is one downside to this, which is that the chalkboard plugin does not sync over multiplex. So you could draw on your slides, but noone else would see it (unless you do the drawing on that unknown computer).</p>
<p><br>
</p>
</section>
<section id="how-to-set-it-up" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="how-to-set-it-up">How to set it up</h2>
<ol type="1">
<li>Create a revealjs presentation with a YAML header that includes:</li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">revealjs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">multiplex</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
<ol start="2" type="1">
<li><p>Render the presentation with <code>quarto render &lt;your_presentation&gt;.qmd</code>. You will now have a file called <code>&lt;your_presentation&gt;-speaker.html</code> in your source directory.</p></li>
<li><p>Open your presentation on the computer that everyone will see.</p></li>
<li><p>Open the <code>&lt;your_presentation&gt;-speaker.html</code> file on your phone or another device.</p></li>
</ol>
<p>For making the last two steps easy, here’s what I did for the example above:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource html number-lines code-with-copy"><code class="sourceCode html"><span id="cb2-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">iframe</span></span>
<span id="cb2-2"><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../../presentations/multiplex.html"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"800"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"600"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> frameborder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> allowfullscreen</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb2-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">iframe</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>and then simply linking to the speaker view on the same page:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource md number-lines code-with-copy"><code class="sourceCode markdown"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">here</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">](../../../presentations/multiplex-speaker.html)</span></span></code></pre></div>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>Pro-tip: <code>../</code> is used to navigate up a directory, since you need to navigate from the site where you want to show the presentation to where the presentation actually lives.</p>
</div></div><hr>
<p>Hope this is helpful! Feel free to check out <a href="https://github.com/lukmayer/website">my source files</a> if you’re still confused.</p>


</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://lukmayer.github.io/blog/posts/reveal_multiplex.html</guid>
  <pubDate>Sat, 05 Apr 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/quarto_logo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>My new favorite search engine</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/kagi.html</link>
  <description><![CDATA[ 





<p>I’ve been using privacy-friendly web search engines ever since I concluded that willingly giving a private company (whose business is making me click on ads) a full record of my every thought is questionable at best. In my previous <a href="https://lukmayer.github.io/blog/posts/search/">search engines post</a> I compared what I saw as the main free search engines, and noted some of the more quirky things select ones tried that stuck with me. Namely “bangs”, “lenses”, maps, and some AI features. Given my affinity for these features, it really is just the natural progression that I would end up using <a href="https://kagi.com">Kagi</a>, a premium search engine that has all of these features and more.</p>
<p>The way Kagi works is simple: you pay a monthly fee, and in return you get a search engine that serves you well. No ads, no tracking. Since the company has to perpetually convince you that their service is worth your hard-earned cash every month, they have to make it good. And they do. While some people are almost cultish about the perceived quality of the search index itself, I think some of the real value for me comes from all the little additional features that Kagi has compared to other search engines. So today I’m going to give you a glimpse into Kagi and explain how they convinced me to pay for a service that is usually provided for “free”.</p>
<p><br>
</p>
<!-- 

Search engine:
- Customizable Bangs
- Customizable page ranking
- Archive, paywalls, ads, AI detection, reverse image
- Rich set of search filters, snaps
- keyboard shortcuts
- add custom CSS styles
- Custom lenses (+ bangs)
- Many helpful widgets

-->
<section id="the-search-index-itself" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="the-search-index-itself">The search index itself</h2>
<p>Kagi does some interesting things to surface more “organic content” than their competitors.</p>
<ul>
<li>They compile search results from multiple sources, such as the other big providers and their own crawlers</li>
<li>They down-rank sites with many ads and trackers</li>
<li>They up-rank sites that are on a list of non-commercial sites</li>
</ul>
<p>These changes already lead to much more pleasant results as hyper-SEO sites are more likely to be pushed down. There are obviously also no “sponsored” results. If this is not enough for you, Kagi makes it easy for you tailor your search experience.</p>
<p><br>
</p>
<section id="personalized-search-results" class="level3">
<h3 class="anchored" data-anchor-id="personalized-search-results">Personalized search results</h3>
<ol type="1">
<li>Kagi let’s you manually up or down-rank sites. For example, you could banish Pinterest from all your web searches with only 2 clicks. Or make sure that relevant Wikipedia pages are always at the top of the results page.</li>
</ol>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_boost.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="The context menu with which Kagi allows you to adjust how sites rank"><img src="https://lukmayer.github.io/blog/posts/images/kagi_boost.png" class="img-fluid figure-img" data-fig-cap="The context menu with which Kagi allows you to adjust how sites rank" alt="The context menu with which Kagi allows you to adjust how sites rank"></a></p>
<figcaption>The context menu with which Kagi allows you to adjust how sites rank</figcaption>
</figure>
</div>
<p><br>
</p>
<ol start="2" type="1">
<li><p>Snaps let you filter results for a specific site, for example <code>@r best laptop</code> would only return results from Reddit. Be honest, you are already doing this because of all the SEO spam sites, just in the more verbose “Best laptop reddit”. This feature saves you those few extra keystrokes.</p></li>
<li><p>Bangs search a specific site for your query, for example <code>!yt cats</code> would take you straight to the YouTube search page for “cats”. You can set custom bangs, and create bangs for other Kagi features like lenses or custom AI assistants (more on this later).</p></li>
<li><p>Lenses can be thought of as specialized search engines that only search a specific set of sites. For example, Kagi provides a “Forums” lens that only returns results from forum sites. You can also create your own lenses, should the default set not suit your needs.</p></li>
</ol>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_lens.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="A screenshot of my drop down menu for lenses."><img src="https://lukmayer.github.io/blog/posts/images/kagi_lens.png" class="img-fluid figure-img" data-fig-cap="A screenshot of my drop down menu for lenses." alt="A screenshot of my drop down menu for lenses."></a></p>
<figcaption>A screenshot of my drop down menu for lenses.</figcaption>
</figure>
</div>
<p><br>
</p>
</section>
<section id="user-friendly-features" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="user-friendly-features">User-friendly features</h3>
<ol type="1">
<li>There is a wide variety of filters you can apply to your search results. Kagi does images (including reverse image search), videos, podcasts, news, maps, date ranges, countries, file types, etc. You can even have it filter out image results that are likely to be AI-generated.</li>
</ol>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_images.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3" title="Kagi can help you avoid/find AI-generated images with this filter option."><img src="https://lukmayer.github.io/blog/posts/images/kagi_images.png" class="img-fluid figure-img" data-fig-cap="Kagi can help you avoid/find AI-generated images with this filter option." alt="Kagi can help you avoid/find AI-generated images with this filter option."></a></p>
<figcaption>Kagi can help you avoid/find AI-generated images with this filter option.</figcaption>
</figure>
</div>
<p><br>
</p>
<ol start="2" type="1">
<li>Kagi has a built-in archive feature that lets you view archived versions of sites. This is especially useful for sites that have paywalls or are otherwise inaccessible. You can also interact with sites and documents through an LLM from the same context menu.</li>
</ol>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_context.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4" title="The context menu with which Kagi allows you to interact with sites and documents, including looking them up in the web archive."><img src="https://lukmayer.github.io/blog/posts/images/kagi_context.png" class="img-fluid figure-img" data-fig-cap="The context menu with which Kagi allows you to interact with sites and documents, including looking them up in the web archive." alt="The context menu with which Kagi allows you to interact with sites and documents, including looking them up in the web archive."></a></p>
<figcaption>The context menu with which Kagi allows you to interact with sites and documents, including looking them up in the web archive.</figcaption>
</figure>
</div>
<p><br>
</p>
<ol start="3" type="1">
<li>Kagi provides many useful widgets and can feel really “smart”. For example you can trigger AI summaries of results by including ‘?’ in your query, or trigger their translation services from natural language queries<sup>1</sup>.</li>
</ol>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;Natural language queries currently seem to work best when asking to translate from English to something else. Doing the reverse requires more explicit queries like “translate ‘Kopfschmerzen’ from German to English”.</p></div></div><p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_translate2.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5" title="An example of triggering Kagi’s translation service with a natural language query."><img src="https://lukmayer.github.io/blog/posts/images/kagi_translate2.png" class="img-fluid figure-img" data-fig-cap="An example of triggering Kagi's translation service with a natural language query." alt="An example of triggering Kagi’s translation service with a natural language query."></a></p>
<figcaption>An example of triggering Kagi’s translation service with a natural language query.</figcaption>
</figure>
</div>
<p><br>
</p>
<ol start="4" type="1">
<li>Kagi has keyboard shortcuts for everything. ‘i’ for images, ‘v’ for videos, ‘q’ for quick answers, etc. It’s a very nice touch if you are a keyboard person.</li>
</ol>
</section>
</section>
<section id="auxillary-services" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="auxillary-services">Auxillary services</h2>
<!--
Auxillary services:
- Assistant: many models, custom instructions
- Universal summarizer, FastGPT, discuss document, Quick answer
- Kagi translate
- Kagi small web
- Kagi maps
- Orion browser
 -->
<section id="ai-features" class="level3">
<h3 class="anchored" data-anchor-id="ai-features">AI features</h3>
<p>Kagi does AI pretty well, in my opinion. That is, they always make it optional and use it to make specific enhancements. I already mentioned the context menu for interacting with sites/docs, getting quick answers from results, and triggering translation widgets. Kagi provides more fully-featured AI stuff as well.</p>
<ol type="1">
<li><p>“Kagi Assistant” is simply a chat interface to a variety of LLMs. There are a lot of models to choose from and you can switch between models within the same thread. This is only available to “Ultimate” subscribers at 25$ a month. Given that a single LLM subscription costs 20-25$ a month, an Ultimate tier Kagi subscription is kind of a no-brainer if you are already paying for LLMs. Threads can be saved and you can provide custom general instructions or create custom assistants (specific model + custom instructions). You can also set a bang for your custom assistants, or reach the assistant interface directly by typing something like <code>!ai explain bayesian non-parametrics to me like I'm 5</code> into your browser.</p></li>
<li><p>“Universal summarizer” lets you summarize any document or page (works on podcasts too). All you do is <code>!sum podcast.mp3</code>and voilà, you get a summary.</p></li>
<li><p>“Kagi translate” can be accessed as a fully featured translation service. It can translate documents, offer alternative interpretations, and voice output. Nice.</p></li>
</ol>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_translate1.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6" title="Kagi’s full featured translation service."><img src="https://lukmayer.github.io/blog/posts/images/kagi_translate1.png" class="img-fluid figure-img" data-fig-cap="Kagi's full featured translation service." alt="Kagi’s full featured translation service."></a></p>
<figcaption>Kagi’s full featured translation service.</figcaption>
</figure>
</div>
<p><br>
</p>
</section>
<section id="other-niceties" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="other-niceties">Other niceties</h3>
<p>In my original search engine post, I lamented that online mapping services are few and far in-between, with Google and Apple being the only main providers. If the gap between Google maps and Apple seems stark, the gap between Apple maps and any independent service is starker. This is why I’m excited that Kagi is building their own mapping service, even if it is still very early days.</p>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/kagi_maps.png" class="lightbox" data-gallery="quarto-lightbox-gallery-7" title="The Kagi maps interface."><img src="https://lukmayer.github.io/blog/posts/images/kagi_maps.png" class="img-fluid figure-img" data-fig-cap="The Kagi maps interface." alt="The Kagi maps interface."></a></p>
<figcaption>The Kagi maps interface.</figcaption>
</figure>
</div>
<p><br>
</p>
<p>Kagi also has a <strong>“Small Web”</strong> feature, which essentially is a collection of personal blogs. The interface basically shows you a random post from one of these sites that was published within the last week. You can like posts, and filter for the posts that other Small web users liked. This is pretty nice for finding content to follow, and in my opinion a little less brain-dead than scrolling through spammy social media feeds. My blog here got approved to this list, so maybe you are reading this post from the Small Web interface right now?</p>
<p>Lastly, Kagi develops <strong>Orion Browser</strong>, which is pretty unique since it is built on WebKit. For example it allows you to use both Chrome and Firefox extensions, and is reportedly super resource efficient. They recently announced that a Linux version is coming this year (currently MacOs only) and the excitement in the broader Linux community is pretty noticeable. The more purist Linux nerds seem to broadly lament both Mozilla as a company, and that everything non-Firefox is built on Chromium, so Orion seems to tick all the nerd boxes if it will indeed be released as open-source software.</p>

<div class="no-row-height column-margin column-container"><div class="margin-aside">
<p>Some interesting things about Kagi as a company are that they are very active on their forums, and already profitable with zero VC funding. Their subscriber base has almost doubled since I started using them late last year. It’s nice to see a less-than-extremely-evil company do well.</p>
</div></div></section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>So there you have it, paying for Kagi delivers serious results. It is pretty polished, user-friendly, and has a lot of features that make it stand out from the competition. I think they have a bright future ahead of them, and I’m excited to see where they take things!</p>


</section>


 ]]></description>
  <category>search engines</category>
  <category>software</category>
  <guid>https://lukmayer.github.io/blog/posts/kagi.html</guid>
  <pubDate>Sun, 30 Mar 2025 07:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/kagi.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>Linux changed me</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/degoogle.html</link>
  <description><![CDATA[ 





<section id="my-journey" class="level4">
<h4 class="anchored" data-anchor-id="my-journey">My journey</h4>
<p>In 2023, I went to a Cognitive Science summer-school. There, I spent a lot of the time between sessions with a roboticist who was really into Linux. Like most people who never seriously considered installing an operating system (OS) that did not come with my machine, I was pretty skeptical about the reliability of such obscure seeming software. However, what stuck with me from these conversations was something along the lines of <strong>“On Linux, you can remove everything you don’t like”</strong>. But I was not ready to take the leap quite yet.</p>
<p>Fast forward to about six months later, I had just installed the brand new Windows 11 on my laptop. I liked the new coat of paint, and felt like I was using the bleeding-edge of it all. However, after a bit more time with it, I grew increasingly annoyed with it. At least back then, Windows 11 had multiple “features” that provided recommendations I did not want but couldn’t fully turn off. This drove me nuts, and I kept thinking back to the roboticists’ ramblings - could jumping ship really be all that bad?</p>
<p>After a bit of research, on a bored day after work, I took the plunge and installed Ubuntu, a specific version of Linux. While Ubuntu is not particularly remarkable, taking this step really changed how I thought about technology. Namely, it opened my eyes to a much more mindful consideration of the products I use. There is a real sense of freedom in <strong>“voting with your wallet”</strong> as Americans like to put it.</p>
<p>What started with wanting to remove widgets I thought were annoying, quickly expanded into other areas. So today, I want to briefly list some alternatives you could consider if, for example, you are not too happy with whose pockets you are lining.</p>
<p>For the purposes of this list, I will assume you are not super duper techy. Just techy enough to follow installation instructions.</p>
<p><br>
</p>
</section>
<section id="pc-operating-system" class="level4">
<h4 class="anchored" data-anchor-id="pc-operating-system">PC operating system</h4>
<p>I started this post with my Linux journey, so let’s wrap this domain up.</p>
<p>For beginners, I’d probably recommend <a href="https://linuxmint.com">Linux Mint</a>. It’s widely regarded as a super easy introduction where you will be able to do all of your daily tasks without running into problems.</p>
<p>There are two big things you should ask yourself before switching:</p>
<ul>
<li><p>Is my hardware supported?</p></li>
<li><p>Do I use software critical for my job that is not available on Linux?</p></li>
</ul>
<p>Thanks to the rise of web-apps, the second question is unlikely to be a huge problem unless your work is very technical.</p>
<p><br>
</p>
</section>
<section id="mobile-operating-system" class="level4">
<h4 class="anchored" data-anchor-id="mobile-operating-system">Mobile operating system</h4>
<p>If you happen to own a Google Pixel, you should consider <a href="https://grapheneos.org">Graphene OS</a>.</p>
<p>There are some drawbacks to this though. There are a few apps that will not work or require some extra thinking on your part. In my experience, anything that requires location services can be a bit fiddly. NFC will probably not work. The banking app Revolut is known to be broken. If you don’t use these things much, feel free to go ahead. The installation of GrapheneOs feels a little scary, but is fairly straightforward. I’ve only had minor hick-ups over 3 years of use, which were all largely due to my own ignorance.</p>
<p>There are multiple other alternatives, but I feel they are unlikely to suit the needs of non-techy people. <a href="https://lukmayer.github.io/blog/posts/minimal.html">Perhaps try using your phone less in general?</a></p>
<p><br>
</p>
</section>
<section id="app-store" class="level4">
<h4 class="anchored" data-anchor-id="app-store">App-store</h4>
<p>For some things, you will need to use a big app store like Google Play.</p>
<p>But there are also tons of utilities that you could get from <a href="https://f-droid.org/en/">F-Droid</a>.</p>
<p>F-Droid is an alternative app-store where app developers have to ensure their apps are ad-free, free of charge, and make their code public. Remarkably, many developers agree to this largely out of philosophical conviction. There are some surprisingly good apps on here that might just be good enough for your purposes. So my suggestion would be to try to find something that works for you from F-Droid before downloading an app from Google Play.</p>
<p>You could also try to <a href="https://lukmayer.github.io/blog/posts/minimal.html#keeping-tabs-on-yourself">reduce your dependency on apps</a> altogether.</p>
<p><br>
</p>
</section>
<section id="email-calendar-passwords-cloud-storage" class="level4">
<h4 class="anchored" data-anchor-id="email-calendar-passwords-cloud-storage">Email, Calendar, Passwords, Cloud storage</h4>
<p>Be aware, migrating all of this takes some effort, as you may for example have to change the e-mail address associated with various accounts. On the bright side, you will hopefully only have to switch once.</p>
<p>I think <a href="https://proton.me">Proton</a> services are the most convenient alternative here. A free-tier account may be sufficient for you.</p>
<p>Make sure to forward email that arrives at your old account(s) to the new one so you don’t miss anything critical.</p>
<p><br>
</p>
</section>
<section id="messaging" class="level4">
<h4 class="anchored" data-anchor-id="messaging">Messaging</h4>
<p>This is another tough category make a full switch on, since you need to convince others to switch too.</p>
<p><a href="https://signal.org">Signal</a> is likely the main alternative service popular enough where at least some of your contacts already have it.</p>
<p>You should probably at least have Signal installed, even if it’s just to allow Signal-curious friends to more easily switch too.</p>
<p><br>
</p>
</section>
<section id="browser-and-search-engine" class="level4">
<h4 class="anchored" data-anchor-id="browser-and-search-engine">Browser and search engine</h4>
<p>For normal people, I’d probably recommend switching to <a href="https://brave.com">Brave</a>.</p>
<p>It has state-of-the-art ad-blocking and I happily used their search engine for a long time.</p>
<p>You could also try <a href="https://www.mozilla.org/en-US/firefox/">Firefox</a> and set your search engine to DuckDuckGo in the Search settings.</p>
<p><br>
</p>
</section>
<section id="social-media" class="level4">
<h4 class="anchored" data-anchor-id="social-media">Social media</h4>
<p>I mostly use Social media to keep up with artists/creators, not to stay in touch with friends. If you are using it for maintaining friendships, maybe consider incorporating some of the tips from my post about <a href="https://lukmayer.github.io/blog/posts/minimal.html#keeping-tabs-on-yourself">apps</a>, and <a href="https://lukmayer.github.io/blog/posts/essentials.html">browser extensions</a>.</p>
<p>In case you use socials for similar reasons as me, I recently wrote about <a href="https://joinmastodon.org">Mastodon</a>, which I whole-heartedly recommend. See my post for details.</p>
<p>Do be aware, curating your Mastodon feed is down to YOU, as there is no recommendation algorithm.</p>
<p><br>
</p>
</section>
<section id="maps" class="level4">
<h4 class="anchored" data-anchor-id="maps">Maps</h4>
<p>This is a category people don’t tend to think about. However, you are with 99% probability either using Apple maps or Google Maps/Waze. Map services are remarkably concentrated.</p>
<p>If you’re looking for a switch, <a href="https://osmand.net">OsmAnd</a> is your best bet.</p>
<p>There are some drawbacks. You have to download the maps for areas beforehand. Business information will not be as up to date as you are used to. As a result, you may have to search for a business online, and then paste the address into the app. Review information may also be lacking.</p>
<p><br>
</p>
<hr>
<p>As you can see, going off the beaten track is a bit more effort. However, I hope you found at least one thing listed here that caught your interest. If you have more suggestions, I’d love to hear from you in the comments.</p>


</section>

 ]]></description>
  <category>software</category>
  <category>linux</category>
  <category>phone</category>
  <category>search engines</category>
  <guid>https://lukmayer.github.io/blog/posts/degoogle.html</guid>
  <pubDate>Sat, 22 Feb 2025 08:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/debian.png" medium="image" type="image/png" height="120" width="144"/>
</item>
<item>
  <title>Why Mastodon is the only social network I use</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/mastodon.html</link>
  <description><![CDATA[ 





<p>A lot of the online platforms we have come accustomed to over the last decade or so are changing in ways we might not always appreciate. Some places have seen increasingly aggressive forms of advertising, others questionable changes in company policy, and yet others have either new or existing owners that increasingly show their true, not so nice, colors.</p>
<p>Does it really need to be like this?</p>
<p><br>
</p>
<section id="the-life-cycle-of-many-tech-companies" class="level2">
<h2 class="anchored" data-anchor-id="the-life-cycle-of-many-tech-companies">The life cycle of many tech companies</h2>
<p>There is a noticeable pattern that once-beloved, now-bemoaned services have in common. Namely, they all start with a huge pile of cash (“Venture Capital”) that they use to firmly establish themselves with. Sometimes it’s well-done marketing, <a href="https://en.wikipedia.org/wiki/Uber#Controversies">other times it’s selling at a loss, or just straight up breaking laws that gets them ahead of competitors</a>. Most often, it’s a mix of all three and more. Only once firmly established do these companies actually start monetizing with ads or price hikes in a way that can recoup their vast, initial costs. Typically, it’s hard for users to switch services, sometimes deliberately so. For example, social networks typically rely on you not being able to convince most of your friends to go somewhere else. Once this transition to profitability takes place, you often see outcries of users lamenting the changes that come with it.</p>
<p><br>
</p>
</section>
<section id="the-alternative-path-the-fediverse" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="the-alternative-path-the-fediverse">The alternative path: the Fediverse</h2>
<p>If you’re not loving the tech-company life cycle, I have good news for you.</p>
<p>In 2018 the people who decide the standards for the internet released <a href="https://en.wikipedia.org/wiki/ActivityPub">ActivityPub</a>, which is in essence a standardized format for social media platforms. Importantly, this means that any platforms that have the ActivityPub format in common can talk to each other.</p>
<p>Thanks to this development, users are able to freely move between platforms that use ActivityPub. Not only does this mean that you are not locked in to a single platform, but it also means that if you come up with a better platform, you can just start it and people can join without needing a new account. This network of interconnected platforms is called the Fediverse (Federated + Universe). What I’ve just described probably seems like a weird concept to anyone less-technologically inclined, but what’s important here is that this allows for a social network that is not controlled by any single entity. A common comparison people draw upon is e-mail, which has a similar structure of independently run services (mail providers) that interface with each other.</p>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/fediverse.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="A great visualization of how the Fediverse is a network of servers with different methods of formatting the ActivityPub protocol information. Source"><img src="https://lukmayer.github.io/blog/posts/images/fediverse.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="A network graph of different fediverse services like mastodon, pixelfed, and peertube."></a></p>
</figure>
</div>
<figcaption>A great visualization of how the Fediverse is a network of servers with different methods of formatting the ActivityPub protocol information. <a href="https://fedi.tips/what-is-mastodon-what-is-the-fediverse/">Source</a></figcaption>
</figure>
</div>
<p><br>
</p>
<section id="whats-mastodon" class="level3">
<h3 class="anchored" data-anchor-id="whats-mastodon">What’s Mastodon?</h3>
<p><a href="https://joinmastodon.org">Mastodon</a> is currently the most popular platform based on ActivityPub, with many different people hosting copies (“Instances”) of Mastodon. Think of each instance as a different community. All these instances can talk to each other, and you can follow people from other instances. As per the ActivityPub standard, you can also follow people from other platforms that use ActivityPub, like PeerTube (think: Youtube) or Pixelfed (think: Instagram). Mastodon looks similar to X/Twitter/Threads/Bluesky.</p>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/feed.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2" title="A screenshot of my Mastodon feed."><img src="https://lukmayer.github.io/blog/posts/images/feed.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="A screenshot of my Mastodon feed."></a></p>
</figure>
</div>
<figcaption>A screenshot of my Mastodon feed.</figcaption>
</figure>
</div>
<p><br>
</p>
</section>
<section id="why-does-this-fediverse-stuff-matter" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="why-does-this-fediverse-stuff-matter">Why does this Fediverse stuff matter?</h3>
<p>There are two big reasons.</p>
<p>1) <strong>If any Fediverse platform turns crappy, you are free to migrate your account somewhere else.</strong></p>
<p>2) <strong>If you migrate your account somewhere else, you retain your follows and followers.</strong></p>
<p>These two attributes directly protect you from the tech-company life cycle I described above.</p>
<p>My take is that this makes Fediverse platforms much more sustainable than the more traditional social media platforms. Creators especially should be paying attention to this, because it’s fairly hard (and risky) to convince your following to move from one traditional platform to another one. A creator’s career can take a serious hit if they are forced to switch platforms. That being said, the Fediverse is not big enough yet to be of serious interest for creators looking to make their living on social media.</p>
<p>Besides some of the very big servers, the Fediverse is more or less just people hosting these “instances” on their hardware because they want to<sup>1</sup> . As such, there are no Ads, no AI-generated content, no algorithm shenanigans, no being subject to censorship you do not agree with. Platforms like Mastodon guarantee freedom in its truest form, far more than any corporate owned social media platform ever could. If you so wish you could create your own instance where no-one can censor you, and all your followers would still be able to see your postings, even if their accounts are registered somewhere else.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;Mainstream platforms have a tough choice: either become more like the Fediverse, or risk inducing migration from their platform to the Fediverse. I think this explains why Threads and Tumblr are embracing ActivityPub; to not appear crappy enough that it would inspire their users to switch.</p></div></div><p>At the same time, you also do not need to subject yourself to spam, or content that you find deeply undesirable. Both of these things can be true at the same time for the simple reason that there is no algorithm in your main feed, just the people you follow.</p>
<p>Even though other platforms leveraging ActivityPub are much less popular than Mastodon, my sense is that they will inevitably grow. This is because every time a big-tech platform does something crappy, some people permanently join the extremely diversified Fediverse. Every time the Fediverse grows it becomes better (more users, more content), and more attractive for others. Eventually, it could hit critical mass where most people will agree that the switch is worth it. This is all to say that since the Fediverse is B.S. proof by design it benefits from the mistakes of others<sup>2</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn2"><p><sup>2</sup>&nbsp;Mainstream platforms have a tough choice: either become more like the Fediverse, or risk inducing migration from their platform to the Fediverse. I think this explains why Threads and Tumblr are embracing ActivityPub; to not appear crappy enough that it would inspire their users to switch.</p></div></div><p><br>
</p>
</section>
<section id="is-bluesky-part-of-the-fediverse" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="is-bluesky-part-of-the-fediverse">Is Bluesky part of the Fediverse?</h3>
<p>Sadly, not really.</p>
<p>While Bluesky is currently getting a lot of attention from X/Twitter refugees, it is also:</p>
<ul>
<li><p>Funded by <a href="https://bsky.social/about/blog/10-24-2024-series-a">Venture Capital, a large part of which comes from Crypto Companies</a><sup>3</sup>.</p></li>
<li><p>Not currently federated, you can only join the server that Bluesky owns.</p></li>
<li><p>Using an in-house protocol<sup>4</sup>, not ActivityPub, meaning you cannot directly interface with the Fediverse<sup>5</sup> .</p></li>
<li><p>Not controllable by the users because their protocol <a href="https://bsky.social/about/blog/5-5-2023-federation-architecture">requires more centralization for moderation and content distribution</a>. In essence, only companies and rich people can run a server<sup>6</sup>.</p></li>
</ul>
<div class="no-row-height column-margin column-container"><div id="fn3"><p><sup>3</sup>&nbsp;Do I even need to explain why this is a massive red flag?</p></div><div id="fn4"><p><sup>4</sup>&nbsp;Questionable at best given that ActivityPub is the officially recommended protocol.</p></div><div id="fn5"><p><sup>5</sup>&nbsp;While annoying, definitely solvable with some compatibility code.</p></div><div id="fn6"><p><sup>6</sup>&nbsp;This is a slight upgrade to being locked in to the platform of one billionaire I guess?</p></div></div><p>Personally, I strongly recognize parts of the tech-company playbook here that I described in the beginning. To me, it seems almost inevitable that Bluesky, once popular, will also make a turn for the worse. I am open to being proven wrong, but I am not holding my breath.</p>
<p>Mastodon may not have as good of a marketing team as Bluesky, and may also have some rough edges in the onboarding experience. However, it’s already heavily diversified, with individuals empowered to make meaningful contributions, and the development effort is moving to a non-profit model to ensure the project stays mission-driven. So yes, compared to Bluesky, I am pretty bullish on Mastodon not going rogue.</p>
<p><br>
</p>
</section>
</section>
<section id="how-to-join-mastodon" class="level2">
<h2 class="anchored" data-anchor-id="how-to-join-mastodon">How to join Mastodon?</h2>
<ul>
<li><p><a href="https://joinmastodon.org" class="uri">https://joinmastodon.org</a></p></li>
<li><p>mastodon.social is the server that the developers of Mastodon own. Either join this one, or click on another server. Which specific one does not matter much, you can change it later, but you should pay attention to the rules of the server you are joining. Servers differ in what types of content is allowed.</p></li>
<li><p>Follow some people. For recommendations on how to curate your feed in the absence of algorithms, check out <a href="https://fedi.tips">fedi.tips</a></p></li>
</ul>


</section>


 ]]></description>
  <category>mastodon</category>
  <category>social media</category>
  <guid>https://lukmayer.github.io/blog/posts/mastodon.html</guid>
  <pubDate>Fri, 14 Feb 2025 08:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/mastodon.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>How to render Quarto websites faster</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/fast_quarto.html</link>
  <description><![CDATA[ 





<p>Today a quick hack for pushing website updates.<br>
</p>
<p><br>
For this Quarto website, I basically have my <code>_quarto.yml</code> set up such that rendering my <code>.qmd</code> documents to HTML will store the HTML files in a specific directory. In this case, the directory is <code>_site</code>.</p>
<p><br>
</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource yaml number-lines code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">project</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">type</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> website</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">output-dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> _site</span></span></code></pre></div>
<p><br>
</p>
<p>I then have a bash script that will push the files in this folder only to the repository that hosts the website, and push all source files to my public website code repository. This is fairly convenient since I just run the script to update the website. However, as my website started to have more and more pages, I realized that using <code>quarto render</code> indiscriminately really slows down the process.</p>
<p>So it dawned upon me the other day that I could simply only render the files that have changed. Conveniently, git already tracks file changes, meaning I could use some git commands to figure out which files to render.</p>
<p>This was surprisingly easy to achieve. Here’s the essential part:</p>
<p><br>
</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get list of changed .qmd or .md files in git working tree</span></span>
<span id="cb2-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CHANGED_FILES</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--porcelain</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--untracked-files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>no <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{print $2}'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-E</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\.qmd$|\.md$'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CHANGED_FILES</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No changed Quarto files to render"</span></span>
<span id="cb2-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb2-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rendering changed files:"</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CHANGED_FILES</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Render changed files</span></span>
<span id="cb2-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CHANGED_FILES</span></span></code></pre></div>
<p><br>
</p>
<p>The first line simply generates a machine-readable list of changed <code>.qmd</code> (and <code>.md</code>) files in the git working tree. Then there’s an if clause and some print statements. Finally, identified files are rendered. Dead simple!</p>
<p>This is super convenient and speeds up the process of updating my website by a factor of 100 or so.</p>
<p>In case you’re interested, here’s the full bash script I use (at the time of writing):</p>
<p><br>
</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource bash number-lines code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get list of changed .qmd or .md files in git working tree</span></span>
<span id="cb3-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">CHANGED_FILES</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--porcelain</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--untracked-files</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>no <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">awk</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{print $2}'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-E</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'\.qmd$|\.md$'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CHANGED_FILES</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb3-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No changed Quarto files to render"</span></span>
<span id="cb3-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb3-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rendering changed files:"</span></span>
<span id="cb3-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CHANGED_FILES</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Render changed files</span></span>
<span id="cb3-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$CHANGED_FILES</span></span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prompt for a commit message</span></span>
<span id="cb3-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter a commit message:"</span></span>
<span id="cb3-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">commit_message</span></span>
<span id="cb3-22"></span>
<span id="cb3-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Push source files to the main repository (lukmayer/website.git) ---</span></span>
<span id="cb3-24"></span>
<span id="cb3-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the current directory is your main project directory (not _site)</span></span>
<span id="cb3-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add and commit changes to the source repo</span></span>
<span id="cb3-27"></span>
<span id="cb3-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$commit_message</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-29"></span>
<span id="cb3-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote add origin git@github.com:lukmayer/website.git</span>
<span id="cb3-31"></span>
<span id="cb3-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Push changes to the main repository (lukmayer/website.git)</span></span>
<span id="cb3-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure 'origin' points to the source repo (lukmayer/website.git)</span></span>
<span id="cb3-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> origin master </span>
<span id="cb3-35"></span>
<span id="cb3-36"></span>
<span id="cb3-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Push rendered files to the GitHub Pages repository (lukmayer.github.io.git) ---</span></span>
<span id="cb3-38"></span>
<span id="cb3-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate to the _site directory (contains the rendered files)</span></span>
<span id="cb3-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> _site</span>
<span id="cb3-41"></span>
<span id="cb3-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a new Git repository inside _site if it doesn't exist already</span></span>
<span id="cb3-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".git"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb3-44">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init</span>
<span id="cb3-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote add origin git@github.com:lukmayer/lukmayer.github.io.git</span>
<span id="cb3-46"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb3-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote set-url origin git@github.com:lukmayer/lukmayer.github.io.git</span>
<span id="cb3-48"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb3-49"></span>
<span id="cb3-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add and commit the rendered site files</span></span>
<span id="cb3-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb3-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$commit_message</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb3-53"></span>
<span id="cb3-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Force push the rendered files to the gh-pages branch of the GitHub Pages repo</span></span>
<span id="cb3-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> origin master:gh-pages  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure that 'gh-pages' is the correct branch for GitHub Pages</span></span>
<span id="cb3-56"></span>
<span id="cb3-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigate back to the root directory of the project</span></span>
<span id="cb3-58"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ..</span></code></pre></div>
<p><br>
</p>
<p>If you use this script, make sure to give it execute permissions with <code>chmod +x update.sh</code><sup>1</sup> and run it with <code>./update.sh</code>. Enjoy! :)</p>


<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;<strong>Always</strong> make sure you know what shell commands do before doing this!</p></div></div>

 ]]></description>
  <category>quarto</category>
  <category>software</category>
  <category>code</category>
  <guid>https://lukmayer.github.io/blog/posts/fast_quarto.html</guid>
  <pubDate>Sat, 08 Feb 2025 08:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/quarto.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>How to make VS Code look like Rstudio/Spyder</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/vsc_rstudio.html</link>
  <description><![CDATA[ 





<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/vscode_setup.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1" title="All in one: editor, variable manager, plotting pane, terminal - beautiful!"><img src="https://lukmayer.github.io/blog/posts/images/vscode_setup.png" class="img-fluid quarto-figure quarto-figure-center figure-img" alt="All in one: editor, variable manager, plotting pane, terminal - beautiful!"></a></p>
</figure>
</div>
<figcaption>All in one: editor, variable manager, plotting pane, terminal - beautiful!</figcaption>
</figure>
</div>
<p><br>
</p>
<p>Today a super quick tip on how to achieve a grid-like layout in Visual Studio Code similar to more dedicated Data-Science IDE’s like Rstudio and Spyder. See image above (click for zoom).</p>
<p>I had been working with a 3-Column layout for the longest time: Activity Bar, Workbench, Panel. However, having the panel take up the entirety of one of these columns felt a bit wasteful given that: 1) I don’t use the terminal <strong>that</strong> much, 2) The layout looks weird when your working directory has a long path, 3) My plots are annoyingly in a separate workbench tab.</p>
<p>So how to limit the panel to one corner of the screen?</p>
<p>Long story short, that’s not currently possible.</p>
<p>However, what we can do, is make terminals be a workbench tab by default, and then tile the tabs to our liking (e.g.&nbsp;via drag-and-drop).</p>
<p>Step 1 is to press <code>CTRL + SHIFT + P</code> and then open <code>Preferences: Open User Settings (JSON)</code>.</p>
<p>Then, add the following to this <code>.json</code>`:</p>
<pre><code>"terminal.integrated.defaultLocation": "editor"</code></pre>
<p>Now terminals will be workbench tabs, so all you need to do is drag them to your preferred location. Same with the plots tab that you probably already have. Behold the beauty!</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">By the way, if you work with .ipynb files, you’ll find that the Panel has a “Jupyter” view, which will feature a variable manager (currently Python only). You can drag-and-drop this view to live on the Activity Bar if you prefer.</span></div></div>
<p><br>
</p>
<p><a href="https://lukmayer.github.io/blog/posts/r_vscode.html">For information on how to set up R or Rmarkdown for VS Code, see this post.</a></p>



 ]]></description>
  <category>software</category>
  <category>vscode</category>
  <guid>https://lukmayer.github.io/blog/posts/vsc_rstudio.html</guid>
  <pubDate>Fri, 24 Jan 2025 08:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/vscode.png" medium="image" type="image/png" height="102" width="144"/>
</item>
<item>
  <title>How to survive Free-tier Duolingo</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/duolingo2.html</link>
  <description><![CDATA[ 





<section id="why-write-this-post" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="why-write-this-post">Why write this post?</h2>
<p>Duolingo has been my preferred language learning app for over 5 years now, simply due to its impressive scale and thoughtful design. It is still the best app for language learning in my opinion, given you are aware of its limits and put in the work to overcome them. I’ve discussed the Pros and Cons of Duolingo, and its evolution over the years in my <a href="https://lukmayer.github.io/blog/posts/duolingo.html">previous Duolingo post</a> - so for more background read that post. One pain point I have with the app is that its creators are monetizing the app more and more in the pursuit of profitability as a publicly traded company. Unfortunately, as a long time user I have therefore witnessed multiple major changes that I believe have made the user experience worse (rather than better) in specific ways.</p>
<p>In its current state, Duolingo is challenging to use as a free user, somewhat contrasting Duolingo’s self-proclaimed mission to be “<a href="https://www.duolingo.com/info">Universally accessible</a>”. The reason you are more-or-ess obliged to pay <a href="https://www.duolingo.com/super">~84 USD</a> a year to continue using the free service<sup>1</sup> is simple. Duolingo has a “hearts” system in which you have a limited number of mistakes you can make before the app refuses to let you continue. Being booted out of a lesson is obviously an extremely frustrating experience that poses a real risk to your motivation for maintaining language learning ambitions. By default, you have 5 hearts, with one heart replenishing every 5 hours, and an option to perform practice lessons to replenish one heart for each. Should you run out of hearts during a lesson, your only options are to quit that lesson or pay 450 “Gems” to refill your hearts to 5. Being a premium user removes all need to worry about silly hearts.</p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp;as a non “tech-savvy” user</p></div><div id="fn2"><p><sup>2</sup>&nbsp;An otherwise great feature, that is now working against you!</p></div></div><p>At first glance, it seems like there are fair amount of options for restoring hearts, doesn’t it? Well, there are a couple of problems here. First of all, the hearts system did not used to exist at all, suggesting to me that its main purpose is to push users towards premium. Secondly, Duolingo is not infallible, with tiny typos or alternative expressions potentially costing you hearts when you can’t afford to lose them. Third is the problem that gems are not that easily earned. You earn them for completing lessons and challenges, but the average user probably only earns 5-20 per day. Compare that to the 450 gem cost of replenishing hearts in a pinch - it’s not hard to see that you soon will be gems bankrupt (assuming you had any in the first place). Finally, if all of this was not enough, Duolingo has recently made a change on their app limiting how many hearts you can earn through practice lessons. On the mobile app, you are now only eligible for <strong>a single practice lesson</strong> at specific times. Since you will be broke for gems, your only realistic options are now: wait and risk not being able to continue your streak<sup>2</sup>, quit out of frustration, or pay.</p>
<p>Putting on my cynic hat, I might <strong>speculate</strong> that since Duolingo’s exercises are personalized to the user, they could (and probably would) use their analytics to ensure that you regularly run out of hearts due to exercises that are just “a tad bit” out of reach for you. They would conceivably do this if they believe you would be likely to pay as a result. I would not be shocked to learn they already do this, as it would be very much in line with the other changes they have made to become more profitable.</p>
<p>I bought the premium subscription for two years, but I have very mixed feelings about supporting Duolingo’s current business strategy. From what I gather, it feels as though their mission to make language learning universally accessible is being compromised, with their focus seemingly shifting towards more polished experiences that require much more funding.</p>
<p>This is why I asked myself what would it take to make the free-tier version of Duolingo sustainable in its current form? In essence, how can one maximize their learning within the contraints of Duolingo’s freemium model? I think you will find that what I suggest here will not only improve your sanity while using Duolingo, but also quite possibly your learning.</p>
<p><br>
</p>
</section>
<section id="improving-your-heart-health" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="improving-your-heart-health">Improving your heart health</h2>
<section id="part-1-making-better-use-of-the-hearts-you-get" class="level3 page-columns page-full">
<h3 class="anchored" data-anchor-id="part-1-making-better-use-of-the-hearts-you-get">Part 1: Making better use of the hearts you get</h3>
<section id="stop-using-the-app1eleven3" class="level4 page-columns page-full">
<h4 class="anchored" data-anchor-id="stop-using-the-app1eleven3">STOP using the app!!!1!!eleven!!<sup>3</sup></h4>
<p>A little known fact about Duolingo is that their website is always <em>at least</em> a year behind the app on any “feature” introductions. Many things seemingly never make it to the web-app. The reason this is important for this guide is extremely simple: You can still do unlimited practice lessons on the website. This means that so long as you manage to finish lessons by the skin of your teeth, you can keep learning. The practice lessons are actually not bad, as they serve as revision of old content<sup>4</sup>.</p>
<div class="no-row-height column-margin column-container"><div id="fn4"><p><sup>4</sup>&nbsp;Weirdly, the practice lessons you get as a free-tier user are of much higher quality and less repetitive than the ones you get access to as a premium user…</p></div></div><p>So the strategy is simple: Do a lesson, try to complete it with at least one heart, do practice lessons until you are topped up, repeat until you’re done learning for the day.</p>
<p>Do note though, some things are not available on the website. For example, timed challenges. Luckily, these missing features are pretty insignificant anyway.</p>
<p><br>
</p>
</section>
<div class="no-row-height column-margin column-container"><div id="fn3"><p><sup>3</sup>&nbsp;Not using the mobile app for services that also have a website is a good idea in general because it is easier to modify websites.</p></div></div><section id="a-tale-of-early-birds-and-night-owls" class="level4">
<h4 class="anchored" data-anchor-id="a-tale-of-early-birds-and-night-owls">A tale of early birds and night owls</h4>
<p>Duolingo had a period where they rewarded you for checking in twice a day, by giving you temporary boosts to how much XP a lesson would award you. The way it worked was that if you did a lesson in the morning, you would become eligible for this boost later on in the day. If you did a lesson during this later “evening” stage you would get a boost available the next morning. This was actually a great system because you felt strongly incentivized to do lessons so that “future you” will feel good when it comes to the next practice time. It’s actually been my habit to do lessons twice a day ever since this existed.</p>
<p>Of course, with the hearts systems mechanics, this habit is dually valuable. Firstly, doing lessons first thing in the morning is hands-down the best thing you can do. This is because your mind will be fresh and focused, resulting in less mistakes and a higher capacity to practice. Doing lessons in the late evening can be <strong>really hard</strong> simply due to being so fatigued at the end of your day. But establishing this evening habit as well lets you maximize your hearts since you will have “gained” up to two hearts since your morning practice.</p>
<p>Therefore, the strategy now is: Do lessons primarily in the morning and then try to squeeze one or two more lessons into the evening to make sure you’re using those hearts as soon as they become available.</p>
<p><br>
</p>
</section>
</section>
<section id="part-2-preventing-heart-aches" class="level3">
<h3 class="anchored" data-anchor-id="part-2-preventing-heart-aches">Part 2: Preventing heart-aches</h3>
<section id="babble-like-the-baby-you-are" class="level4">
<h4 class="anchored" data-anchor-id="babble-like-the-baby-you-are">Babble like the baby you are</h4>
<p>I have previously faulted Duolingo for having relatively few/poor speaking practice options. Therefore, if you are using Duolingo you should take matters into your own hands a bit more. One easy way to do this is to simply sound everything out loud during lessons. Not only does this help you get valuable pronunciation and speaking practice, it also clearly improves your retention, and makes you less likely to make mistakes. The reason you are less likely to make mistakes is that when you are sounding everything out loud, you are taking the lessons a bit slower. In other words, you are reading more carefully, and thus will avoid misinterpretation errors. A bit awkward a first, but doing this is basically a no-brainer if hearts are at stake!</p>
<p><br>
</p>
</section>
<section id="work-smarter-not-harder" class="level4">
<h4 class="anchored" data-anchor-id="work-smarter-not-harder">Work smarter, not harder</h4>
<p>Another one of these little known features of Duolingo is that most of the time, you can either submit your answer for a given exercise, or hit the “skip” button. Pressing the skip button will reveal the solution to the question, and add the question to the back of the stack of lesson exercises, much like a mistake would. Unlike a mistake however, pressing skip will not cost you a heart. Thus, if you are unsure about how to spell something, what the word was, etc. you should make use of this.</p>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/skip.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://lukmayer.github.io/blog/posts/images/skip.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></a></p>
</figure>
</div>
<div class="text-center">
<p>The elusive skip button (bottom-left) in the wild</p>
</div>
<p><br>
</p>
<p>Of course, you’re also not forbidden from opening another tab and translating answers you are foggy on. Language models are decent at fixing grammar and spelling errors. Remember, the goal is to not let Duolingo drain your gems wallet any more than strictly necessary because we need those gems for when you are having a rough day.</p>
<p><br>
</p>
</section>
</section>
</section>
<section id="hacking-duolingo" class="level2">
<h2 class="anchored" data-anchor-id="hacking-duolingo">“Hacking” Duolingo</h2>
<p>To be honest, following everything in Part 1 might still not be enough to make your net gem earnings positive. The reason we care so much about gems is that they are the only way to continue a lesson when you’re having a bad day. Having to abandon a lesson you struggled so hard on because you can’t afford to continue is really frustrating and may even lead you to quit all together.</p>
<p>So the next level is to use more advanced tools to help you.</p>
<p>Since we are using the website, we can use browser extensions that modify how Duolingo works. There are a couple that are very recommendable. For our goals, one really stands out.</p>
<p><br>
</p>
<section id="almost-essential-duolingo-fast-mode" class="level4">
<h4 class="anchored" data-anchor-id="almost-essential-duolingo-fast-mode">Almost essential: Duolingo Fast Mode</h4>
<p><a href="https://chromewebstore.google.com/detail/duolingo-fast-mode/mhmipgjhaailkgpdknkibeacoifgfddd">Duolingo Fast Mode</a> has almost no users, even though it makes free-tier Duolingo so much nicer. This extension gives you instant feedback while you are doing exercises, allowing you to know <em>before</em> you submit your answer whether it will be accepted. It will even help you notice if you are using the wrong word form. However, note that these suggestions are very picky, and will expect you to type out all punctuation and special characters!</p>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/typo.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://lukmayer.github.io/blog/posts/images/typo.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></a></p>
</figure>
</div>
<div class="text-center">
<p>Fast Mode helping me spot a typo before submitting (highlight just underneath Bea)</p>
</div>
<p><br>
</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="images/feedback.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://lukmayer.github.io/blog/posts/images/feedback.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></a></p>
</figure>
</div>
<div class="text-center">
<p>Fast Mode helping me realize I’m not using the right word</p>
</div>
<p><br>
</p>
<p>Some other nice extensions include: <a href="https://chromewebstore.google.com/detail/duoleavemealone-for-duoli/clipadhhddnpnocanhnbonnhppdibnpf/reviews">Duoleavemealone</a>, which will automatically skip through unnecessary screens during lessons, and <a href="https://chromewebstore.google.com/detail/duolingo-solution-viewer/idffaipgnlkhfhibgnodeiogpgojcmfm">Duolingo Solution Viewer</a>, which provides additional information on what solutions would have been accepted whenever you do make a mistake.</p>
<p>Finally, being a free user on Duolingo also means enduring tons of ads. So if you have not already, do yourself a favor and install an ad-blocker. Some useful information on ad-blockers and other essential web tools <a href="https://lukmayer.github.io/blog/posts/essentials/">here</a>.<br>
</p>
<p><br>
</p>
</section>
</section>
<section id="conclusion" class="level2 page-columns page-full">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>I hope this guide has successfully shown you how to make the most out of the free user experience on Duolingo. While some of these tips may appear like “cheating”, I actually believe the learning experience is either improved or at least not harmed by using them. You might find that the more “hacky” solutions are not necessary at the moment, but as a long time user I can tell you that they most likely will eventually be needed<sup>5</sup>. Good luck on your language learning journey!</p>


<div class="no-row-height column-margin column-container"><div id="fn5"><p><sup>5</sup>&nbsp;For reference, Duolingo initially promised they would not introduce the hearts system to their website, and yet here we are.</p></div></div></section>


 ]]></description>
  <category>software</category>
  <category>duolingo</category>
  <category>extensions</category>
  <guid>https://lukmayer.github.io/blog/posts/duolingo2.html</guid>
  <pubDate>Thu, 23 Jan 2025 08:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/duo.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Vivaldi features: Personal Best-of</title>
  <dc:creator>Luke </dc:creator>
  <link>https://lukmayer.github.io/blog/posts/vivaldi4.html</link>
  <description><![CDATA[ 





<p>I’ve written quite a bit about Vivaldi by now [<a href="https://lukmayer.github.io/blog/posts/vivaldi1.html">1</a>], [<a href="https://lukmayer.github.io/blog/posts/vivaldi2.html">2</a>], [<a href="https://lukmayer.github.io/blog/posts/vivaldi3.html">3</a>] but so far I’ve never really gone into detail about what I like about it.</p>
<p>In this post, I’ll highlight all the features I like that together make Vivaldi my favorite browser by far.</p>
<p><br>
</p>
<section id="customization" class="level2">
<h2 class="anchored" data-anchor-id="customization">Customization</h2>
<p>Vivaldi is famous for its flexibility. By default, the <a href="https://lukmayer.github.io/blog/posts/vivaldi1/index.html">Vivaldi UI is quite busy</a>, probably to give new users a good impression of just how extensive the feature set is. But if you are like me and prefer a more minimalistic look, then you will be happy to know that you can customize the UI to your heart’s content. In principle, you can arbitrarily hide and/or rearrange every button you want, though there are some <a href="https://lukmayer.github.io/blog/posts/vivaldi2/index.html">(unwritten) rules</a> to what is possible. This is similar to what you can do in Firefox, but on steroids.</p>
<p><br>
</p>
<p><a href="images/minimal_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://lukmayer.github.io/blog/posts/images/minimal_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>My minimal Vivaldi setup</p>
</div>
<p><br>
</p>
<p>Vivaldi does not force you into a particular workflow, instead consistently giving users multiple options to choose from. As a small example, you can set the tab bar to whichever edge of the window you prefer, use a “panel” to manage tabs instead or not have any tab UI at all. Users can opt in to Vivaldi’s “productivity features” or keep using their own preferred methods. You can configure mouse gestures if that is of interest to you. You can set custom keyboard shortcuts for almost anything. The list goes on, but basically, Vivaldi is not invested in getting you to use anything in particular, instead it gives you tools and a platform to craft your own workflow in a way that is accessible to most people (in other words, low/no-code).</p>
<p>If that wasn’t enough for you, you can also very easily install mods (CSS and JS code) to further tweak Vivaldi, <a href="https://lukmayer.github.io/blog/posts/vivaldi3/">something I make use of</a> to add polish to some rough edges I ran into for my particular setup.</p>
<p>Finally, themes are easily created, shared, installed, and tweaked. <a href="https://themes.vivaldi.net/users/Willuk">I’ve even made a few myself</a>.</p>
<p><br>
</p>
</section>
<section id="mail-calendar-rss-feed-reader-integration" class="level2">
<h2 class="anchored" data-anchor-id="mail-calendar-rss-feed-reader-integration">Mail, Calendar, RSS feed reader integration</h2>
<p>Vivaldi has full integration for E-mail, Calendars, and RSS feeds. In this particular aspect, Vivaldi is entirely unique among contemporary browsers.</p>
<p>The mail and calendar client is a full-featured client that can handle multiple accounts, and has a very nice UI that adapts to your theme. Mail has a lot of features that you would expect from a desktop client, like filters, labels, and search. Composing a mail opens a tab. It’s more powerful than Outlook or Gmail web-clients since neither can handle multiple accounts without compromises, though Outlook probably has some niche features that Vivaldi doesn’t have. I also find it better designed than Thunderbird, with common tasks being easier to do.</p>
<p><br>
</p>
<p><a href="images/mail_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://lukmayer.github.io/blog/posts/images/mail_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>A screenshot of Vivaldi’s mail client</p>
</div>
<p><br>
</p>
<p>Calendar supports tasks, keyboard shortcuts, multiple views. It also allows you to create templates for event categories. Again, it’s pretty powerful and yet super easy to use.</p>
<p><br>
</p>
<p><a href="images/cal_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://lukmayer.github.io/blog/posts/images/cal_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>My calendar in Vivaldi</p>
</div>
<p><br>
</p>
<p>I’ve previously written about <a href="https://lukmayer.github.io/blog/posts/rss/">RSS feeds</a> and why it’s a good idea to make use of them. I actually never knew RSS was a thing before using Vivaldi and quickly discovered how useful it is for keeping up with scientific publications. Since then, I have greatly expanded my use of RSS readers. Vivaldi offers a built-in RSS feed reader that’s super easy to use, since Vivaldi helps you find RSS feeds on websites. It has no usage limits, stores data locally, and feeds can be exported if you decide to switch. I use the Feed reader to keep up with blogs, scientific publications, and YouTube channels. It’s a great way to stay up to date without having to visit dozens of websites.</p>
<p><br>
</p>
<p><a href="images/rss_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://lukmayer.github.io/blog/posts/images/rss_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>The RSS feed reader in Vivaldi</p>
</div>
<p><br>
</p>
<p>I also like that Vivaldi offers these things for free to make their browser more attractive, rather than trying to generate ad-revenue from them like other companies. <a href="https://vivaldi.com/blog/vivaldi-business-model/">More on Vivaldi’s business model here</a>.</p>
<p><br>
</p>
</section>
<section id="tab-switcher-command-palette-tab-tiling" class="level2">
<h2 class="anchored" data-anchor-id="tab-switcher-command-palette-tab-tiling">Tab switcher, Command palette, Tab-tiling</h2>
<p>Now I want to highlight some smaller features that just make life easier.</p>
<p>First up is the <strong>tab switcher</strong>. If you use keyboard shortcuts to switch tabs, you’ll love this feature. It’s similar to what many coding IDE’s have. That is, if you hit <code>Ctrl + Tab</code> you get a preview of all your tabs and can navigate which tab you want to switch to by repeatedly hitting <code>Tab</code>. There’s even a little preview image of the tab you’re about to switch to. It’s nice because you don’t have to flip through every tab until you get to the one you wanted. It’s definitely a small touch, but wow does it feel good.</p>
<p><br>
</p>
<p><a href="images/switch_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://lukmayer.github.io/blog/posts/images/switch_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>Tab switcher: A feature I never knew I needed</p>
</div>
<p><br>
</p>
<p>Next up, the <strong>command palette</strong>. By default, you can open the command palette with <code>Ctrl + E</code>. This opens a little pop-out that has many uses. It lets you change settings on the fly, has access to tools like a calculator, can be used to open a bookmark, or perform an internet search in a new tab. I use this all the time to quickly open a new tab and search for something, or crunch some numbers. I really miss this whenever I have to use another browser.</p>
<p><br>
</p>
<p><a href="images/command_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://lukmayer.github.io/blog/posts/images/command_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>Command palette: Really hard to go without once you’re used to it</p>
</div>
<p><br>
</p>
<p>Finally, <strong>tab-tiling</strong>. Tab-tiling is a feature that increasingly many browsers have, but Vivaldi’s had this for many years, and it’s really well implemented. Using keyboard shortcuts or a UI button, you can tile tabs in a grid, horizontally, or vertically. This splits the window into multiple panes, each showing a different tab. This is great for multitasking, say if you want to watch a video and take notes.</p>
<p><br>
</p>
<p><a href="images/tile_viv.png" class="lightbox" data-gallery="quarto-lightbox-gallery-7"><img src="https://lukmayer.github.io/blog/posts/images/tile_viv.png" class="img-fluid"></a></p>
<div class="text-center">
<p>Tab tiling: Perfect for multitasking</p>
</div>
<p><br>
</p>
</section>
<section id="other-niceties" class="level2">
<h2 class="anchored" data-anchor-id="other-niceties">Other niceties</h2>
<p>Now some features I use in Vivaldi that are nice but not as flashy or unique as the ones mentioned previously.</p>
<ul>
<li><p><strong>Custom search engines</strong>: Set as many search engines as you want, and give them a keyword to quickly search with them.</p></li>
<li><p><strong>Reading list</strong>: Save pages for later reading. I use this for saving journal articles that caught my eye, but I don’t have time to read right now.</p></li>
<li><p><strong>Web panels</strong>: A view that can open a partition of the window to show an internal page of Vivaldi (e.g.&nbsp;Mail), or some arbitrary website. For example, I use Vivaldi’s “Window” panel to manage my tabs, which is a bit like “Tree Style Tabs” in Firefox.</p></li>
<li><p><strong>Work spaces</strong>: Workspaces are like having multiple browser windows open at once, but in one window. You can have different tabs open in different workspaces, and switch between them easily via the UI or a keyboard shortcut. I use this to keep my work tabs separate from my personal tabs.</p></li>
</ul>
<p><br>
</p>
<p><a href="images/window_panel.png" class="lightbox" data-gallery="quarto-lightbox-gallery-8"><img src="https://lukmayer.github.io/blog/posts/images/window_panel.png" class="img-fluid"></a></p>
<div class="text-center">
<p>The window panel: A different take on vertical tabs</p>
</div>
<p><br>
</p>
</section>
<section id="theres-way-more" class="level2">
<h2 class="anchored" data-anchor-id="theres-way-more">There’s way more</h2>
<p>I’m really just scratching the surface here, since I focussed on <em>what I use</em>. For example, Vivaldi recently added a feature that lets you add widgets to the new tab page. Widgets can be things like a clock, a weather forecast, your RSS feed, or some arbitrary website. It’s cool but doesn’t fit my minimalistic setup. Then there are niche features like tab groups (kind of similar to work spaces), mouse gestures (configuring commands to mouse movements), and sessions (saving a collection of tabs to open later). There’s also a built-in markdown-based note-taking client I didn’t even touch upon. I also didn’t really mention all the little settings you can tweak, for example that there are 2 different styles to choose from for the tab switcher.</p>
<p>The point is, <a href="https://vivaldi.com">Vivaldi</a> is a user-friendly canvas for browsing the internet, and you can paint it however you like with a rich set of brushes. It may be overwhelming at first, but once you get the hang of it, it’s really hard to use anything else.</p>


</section>

 ]]></description>
  <category>software</category>
  <category>vivaldi</category>
  <guid>https://lukmayer.github.io/blog/posts/vivaldi4.html</guid>
  <pubDate>Sun, 05 Jan 2025 08:00:00 GMT</pubDate>
  <media:content url="https://lukmayer.github.io/blog/posts/images/vivaldi_logo.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
